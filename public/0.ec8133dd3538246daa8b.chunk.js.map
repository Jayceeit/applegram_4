{"version":3,"sources":["webpack:///./src/hooks/useHeavyAnimationCheck.ts","webpack:///./src/helpers/dom/whichChild.ts","webpack:///./src/helpers/fastSmoothScroll.ts","webpack:///./src/helpers/dom/findUpAsChild.ts","webpack:///./src/components/horizontalMenu.ts","webpack:///./src/components/transition.ts","webpack:///./src/helpers/animation.ts","webpack:///./src/helpers/schedulers.ts","webpack:///./src/lib/rlottie/rlottie.worker.ts","webpack:///./src/lib/lottieLoader.ts","webpack:///./src/helpers/number.ts","webpack:///./src/helpers/dom/isInDOM.ts","webpack:///./src/pages/pagesManager.ts","webpack:///./src/pages/page.ts","webpack:///./src/components/animationIntersector.ts"],"names":["isAnimating","heavyAnimationPromise","promisesInQueue","resolve","log","console","bind","dispatchHeavyAnimationEvent","promise","timeout","dispatchEvent","promises","undefined","finally","filter","Boolean","perf","performance","now","_heavyAnimationPromise","Promise","race","then","isFulfilled","onHeavyAnimationEnd","interruptHeavyAnimation","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","listenerSetter","add","addEventListener","remove","removeManual","removeEventListener","whichChild","elem","parentNode","i","previousElementSibling","FocusDirection","fastSmoothScroll","container","element","position","margin","maxDistance","forceDirection","forceDuration","axis","getNormalSize","settings","animationsEnabled","Static","scrollWithJs","getBoundingClientRect","elementRect","containerRect","offsetTop","top","scrollTop","Up","Down","Math","max","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","document","body","elementPosition","elementSize","containerSize","rect","scrollPosition","scrollSize","path","remainingPath","min","target","absPath","abs","duration","startAt","Date","transition","shortTransition","longTransition","tick","t","currentPath","round","findUpAsChild","el","parent","parentElement","horizontalMenu","tabs","content","onClick","onTransitionEnd","transitionTime","scrollableX","selectTab","dataset","animation","proxy","Proxy","apply","that","args","id","animate","querySelector","children","selectTarget","tabContent","canChange","scrollIntoViewNew","prevId","classList","contains","prev","tagName","toLowerCase","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","style","transform","requestAnimationFrame","firstElementChild","e","tab","slideNavigation","prevTabContent","toRight","width","elements","reverse","offsetWidth","slideTabs","TransitionSlider","type","isHeavy","animationFunction","Transition","once","withAnimationListener","onTransitionEndCallbacks","Map","animationDeferred","from","listenerName","onEndEvent","callback","get","clear","overrideFrom","HTMLElement","to","clearTimeout","window","setTimeout","onTransitionEndCallback","toggle","set","delete","_from","instances","cancelAnimationByKey","key","instance","getAnimationInstance","isCancelled","deferred","animateSingle","createAnimationInstance","fastRafCallbacks","fastRaf","push","currentCallbacks","forEach","cb","fastRafConventionalCallbacks","rafPromise","processing","fastRafConventional","length","fastRafPromise","doubleRaf","Worker_fn","Worker","convert","value","worker","options","super","reqId","height","paused","direction","speed","autoplay","loop","group","frames","cachingDelta","this","hasOwnProperty","skipRatio","_loop","_autoplay","skipDelta","pixelRatio","devicePixelRatio","needUpscale","mediaSizes","isMobile","noCache","Infinity","canvas","createElement","context","getContext","clamped","Uint8ClampedArray","imageData","ImageData","methodName","sendQuery","jsonString","setMainLoop","clearPendingRAF","rafId","renderFirstFrame","pause","curFrame","frameCount","requestFrame","stop","play","lottieLoader","onDestroy","frame","frameNo","data","putImageData","err","error","frInterval","delta","frThen","renderFrame2","renderFrame","fps","method","mainLoopForwards","mainLoopBackwards","currentMethod","frameListener","listenerResults","diff","appendChild","time","defaultListener","onError","onerror","onmessage","event","Object","queryMethodListener","queryMethodArguments","call","message","postMessage","terminate","queryMethod","transfer","arg","ArrayBuffer","buffer","isWebAssemblySupported","loadPromise","reject","loaded","workersLimit","players","workers","curWorkerNum","logger","Error","onPlayerLoaded","rlPlayer","debug","onLoad","warn","onFrame","onPlayerError","animationIntersector","getAnimations","checkAnimation","player","remain","object","toneIndex","replacements","COLORREPLACEMENTS","checkSmth","smth","ty","k","c","color","foundReplacement","find","p","applyTo","iterateIt","it","layer","layers","shapes","shape","params","url","loadLottieWorkers","fetch","res","arrayBuffer","invokeCrypto","str","loadAnimationWorker","assign","animationData","newAnimationData","JSON","parse","applyReplacements","stringify","parseInt","initPlayer","addAnimation","idx","loadFromData","numberThousandSplitter","x","joiner","parts","toString","split","replace","join","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","formatNumber","clamp","v","isInDOM","isConnected","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","page","onShown","isAuthPage","display","pageEl","className","onFirstMount","onMount","installed","setPage","visible","Set","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","observer","IntersectionObserver","entries","idle","isIDLE","entry","isIntersecting","clearCache","doc","checkAnimations","found","HTMLVideoElement","src","load","unobserve","stickers","observe","blurred","destroy","groups","keys","removeAnimation","has","animations","refreshGroup"],"mappings":"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","file":"0.ec8133dd3538246daa8b.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\r\n\r\nimport { AnyToVoidFunction } from '../types';\r\nimport ListenerSetter from '../helpers/listenerSetter';\r\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\r\nimport rootScope from '../lib/rootScope';\r\nimport DEBUG from '../config/debug';\r\nimport { pause } from '../helpers/schedulers/pause';\r\n\r\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\r\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\r\n\r\nlet isAnimating = false;\r\nlet heavyAnimationPromise: CancellablePromise<void> = deferredPromise<void>();\r\nlet promisesInQueue = 0;\r\n\r\nheavyAnimationPromise.resolve();\r\n\r\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\r\n\r\nexport function dispatchHeavyAnimationEvent(promise: Promise<any>, timeout?: number) {\r\n  if(!isAnimating) {\r\n    heavyAnimationPromise = deferredPromise<void>();\r\n    rootScope.dispatchEvent(ANIMATION_START_EVENT);\r\n    isAnimating = true;\r\n    DEBUG && log('start');\r\n  }\r\n  \r\n  ++promisesInQueue;\r\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\r\n\r\n  const promises = [\r\n    timeout !== undefined ? pause(timeout) : undefined,\r\n    promise.finally(() => {})\r\n  ].filter(Boolean);\r\n\r\n  const perf = performance.now();\r\n  const _heavyAnimationPromise = heavyAnimationPromise;\r\n  Promise.race(promises).then(() => {\r\n    if(heavyAnimationPromise !== _heavyAnimationPromise || heavyAnimationPromise.isFulfilled) { // interrupted\r\n      return;\r\n    }\r\n\r\n    --promisesInQueue;\r\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\r\n    if(promisesInQueue <= 0) {\r\n      onHeavyAnimationEnd();\r\n    }\r\n  });\r\n\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nfunction onHeavyAnimationEnd() {\r\n  if(heavyAnimationPromise.isFulfilled) {\r\n    return;\r\n  }\r\n\r\n  isAnimating = false;\r\n  promisesInQueue = 0;\r\n  rootScope.dispatchEvent(ANIMATION_END_EVENT);\r\n  heavyAnimationPromise.resolve();\r\n\r\n  DEBUG && log('end');\r\n}\r\n\r\nexport function interruptHeavyAnimation() {\r\n  onHeavyAnimationEnd();\r\n}\r\n\r\nexport function getHeavyAnimationPromise() {\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nexport default function(\r\n  handleAnimationStart: AnyToVoidFunction,\r\n  handleAnimationEnd: AnyToVoidFunction,\r\n  listenerSetter?: ListenerSetter\r\n) {\r\n  //useEffect(() => {\r\n    if(isAnimating) {\r\n      handleAnimationStart();\r\n    }\r\n\r\n    const add = listenerSetter ? listenerSetter.add(rootScope) : rootScope.addEventListener.bind(rootScope);\r\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\r\n    add(ANIMATION_START_EVENT, handleAnimationStart);\r\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\r\n\r\n    return () => {\r\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\r\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\r\n    };\r\n  //}, [handleAnimationEnd, handleAnimationStart]);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function whichChild(elem: Node) {\r\n  if(!elem.parentNode) {\r\n    return -1;\r\n  }\r\n  \r\n  let i = 0;\r\n  // @ts-ignore\r\n  while((elem = elem.previousElementSibling) !== null) ++i;\r\n  return i;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's fastSmoothScroll slightly patched\r\n\r\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\r\nimport { fastRaf } from './schedulers';\r\nimport { animateSingle, cancelAnimationByKey } from './animation';\r\nimport rootScope from '../lib/rootScope';\r\nimport isInDOM from './dom/isInDOM';\r\n\r\nconst MIN_JS_DURATION = 250;\r\nconst MAX_JS_DURATION = 600;\r\nconst LONG_TRANSITION_MAX_DISTANCE = 1500;\r\nconst SHORT_TRANSITION_MAX_DISTANCE = 500;\r\n\r\nexport enum FocusDirection {\r\n  Up,\r\n  Down,\r\n  Static,\r\n};\r\n\r\nexport type ScrollGetNormalSizeCallback = (options: {rect: DOMRect}) => number;\r\n\r\nexport default function fastSmoothScroll(\r\n  container: HTMLElement,\r\n  element: HTMLElement,\r\n  position: ScrollLogicalPosition,\r\n  margin = 0,\r\n  maxDistance = LONG_TRANSITION_MAX_DISTANCE,\r\n  forceDirection?: FocusDirection,\r\n  forceDuration?: number,\r\n  axis: 'x' | 'y' = 'y',\r\n  getNormalSize?: ScrollGetNormalSizeCallback\r\n) {\r\n  //return;\r\n\r\n  if(!rootScope.settings.animationsEnabled) {\r\n    forceDirection = FocusDirection.Static;\r\n  }\r\n\r\n  if(forceDirection === FocusDirection.Static) {\r\n    forceDuration = 0;\r\n    return scrollWithJs(container, element, position, margin, forceDuration, axis, getNormalSize);\r\n    /* return Promise.resolve();\r\n\r\n    element.scrollIntoView({ block: position });\r\n\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve(); */\r\n  }\r\n\r\n  if(axis === 'y' && element !== container && isInDOM(element) && container.getBoundingClientRect) {\r\n    const elementRect = element.getBoundingClientRect();\r\n    const containerRect = container.getBoundingClientRect();\r\n  \r\n    const offsetTop = elementRect.top - containerRect.top;\r\n    if(forceDirection === undefined) {\r\n      if(offsetTop < -maxDistance) {\r\n        container.scrollTop += (offsetTop + maxDistance);\r\n      } else if(offsetTop > maxDistance) {\r\n        container.scrollTop += (offsetTop - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) { // * not tested yet\r\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\r\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\r\n    }\r\n    /* const { offsetTop } = element;\r\n\r\n    if(forceDirection === undefined) {\r\n      const offset = offsetTop - container.scrollTop;\r\n\r\n      if(offset < -maxDistance) {\r\n        container.scrollTop += (offset + maxDistance);\r\n      } else if(offset > maxDistance) {\r\n        container.scrollTop += (offset - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) {\r\n      container.scrollTop = offsetTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) {\r\n      container.scrollTop = Math.max(0, offsetTop - maxDistance);\r\n    } */\r\n  }\r\n\r\n  const promise = new Promise<void>((resolve) => {\r\n    fastRaf(() => {\r\n      scrollWithJs(container, element, position, margin, forceDuration, axis, getNormalSize)\r\n      .then(resolve);\r\n    });\r\n  });\r\n\r\n  return axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\r\n}\r\n\r\nfunction scrollWithJs(\r\n  container: HTMLElement, \r\n  element: HTMLElement, \r\n  position: ScrollLogicalPosition, \r\n  margin = 0, \r\n  forceDuration?: number, \r\n  axis: 'x' | 'y' = 'y',\r\n  getNormalSize?: ScrollGetNormalSizeCallback\r\n) {\r\n  if(!isInDOM(element)) {\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const rectStartKey = axis === 'y' ? 'top' : 'left';\r\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\r\n  const sizeKey = axis === 'y' ? 'height' : 'width';\r\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\r\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\r\n\r\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\r\n  const elementRect = element.getBoundingClientRect();\r\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\r\n\r\n  //const transformable = container.firstElementChild as HTMLElement;\r\n\r\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\r\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\r\n\r\n  const containerSize = getNormalSize ? getNormalSize({rect: containerRect}) : containerRect[sizeKey];\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  /* const elementPosition = element.offsetTop;\r\n  const elementSize = element.offsetHeight;\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  const containerSize = container.offsetHeight; */\r\n\r\n  let path!: number;\r\n\r\n  switch(position) {\r\n    case 'start':\r\n      path = elementPosition - margin;\r\n      break;\r\n    case 'end':\r\n      path = elementRect[rectEndKey] + (elementSize - elementRect[sizeKey]) - containerRect[rectEndKey];\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (containerSize / 2)\r\n        : elementPosition - margin;\r\n      break;\r\n  }\r\n  /* switch (position) {\r\n    case 'start':\r\n      path = (elementPosition - margin) - scrollPosition;\r\n      break;\r\n    case 'end':\r\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\r\n        : (elementPosition - margin) - scrollPosition;\r\n      break;\r\n  } */\r\n\r\n  // console.log('scrollWithJs: will scroll path:', path, element);\r\n\r\n  /* let existsTransform = 0;\r\n  const currentTransform = transformable.style.transform;\r\n  if(currentTransform) {\r\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\r\n    //path += existsTransform;\r\n  } */\r\n\r\n  if(path < 0) {\r\n    const remainingPath = -scrollPosition;\r\n    path = Math.max(path, remainingPath);\r\n  } else if(path > 0) {\r\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\r\n    path = Math.min(path, remainingPath);\r\n  }\r\n\r\n  const target = container[scrollPositionKey] + path;\r\n  const absPath = Math.abs(path);\r\n  const duration = forceDuration ?? (\r\n    MIN_JS_DURATION + (absPath / LONG_TRANSITION_MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\r\n  );\r\n  const startAt = Date.now();\r\n\r\n  /* transformable.classList.add('no-transition');\r\n\r\n  const tickTransform = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n    const currentPath = path * transition(t);\r\n\r\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\r\n    container.dataset.translate = '' + -currentPath;\r\n\r\n    const willContinue = t < 1;\r\n    if(!willContinue) {\r\n      fastRaf(() => {\r\n        delete container.dataset.transform;\r\n        container.dataset.transform = '';\r\n        transformable.style.transform = '';\r\n        void transformable.offsetLeft; // reflow\r\n        transformable.classList.remove('no-transition');\r\n        void transformable.offsetLeft; // reflow\r\n        container[scrollPositionKey] = Math.round(target);\r\n      });\r\n    }\r\n\r\n    return willContinue;\r\n  };\r\n  \r\n  return animateSingle(tickTransform, container); */\r\n\r\n  /* return new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      transformable.style.transform = '';\r\n      transformable.style.transition = '';\r\n\r\n      setTimeout(resolve, duration);\r\n    });\r\n  });\r\n\r\n  const transformableHeight = transformable.scrollHeight;\r\n  //transformable.style.minHeight = `${transformableHeight}px`;\r\n  */\r\n\r\n  const transition = absPath < SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\r\n  const tick = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n\r\n    const currentPath = path * (1 - transition(t));\r\n    container[scrollPositionKey] = Math.round(target - currentPath);\r\n    \r\n    return t < 1;\r\n  };\r\n\r\n  if(!duration || !path) {\r\n    cancelAnimationByKey(container);\r\n    tick();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /* return new Promise((resolve) => {\r\n    setTimeout(resolve, duration);\r\n  }).then(() => {\r\n    transformable.classList.add('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.style.transform = '';\r\n    transformable.style.transition = '';\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.classList.remove('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    fastRaf(() => {\r\n      \r\n      container[scrollPositionKey] = Math.round(target);\r\n      //transformable.style.minHeight = ``;\r\n    });\r\n    \r\n  }); */\r\n\r\n  return animateSingle(tick, container);\r\n}\r\n\r\nfunction longTransition(t: number) {\r\n  return 1 - ((1 - t) ** 5);\r\n}\r\n\r\nfunction shortTransition(t: number) {\r\n  return 1 - ((1 - t) ** 3.5);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAsChild(el: any, parent: any) {\r\n  if(el.parentElement === parent) return el;\r\n  \r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.parentElement === parent) {\r\n      return el;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { TransitionSlider } from \"./transition\";\r\nimport { ScrollableX } from \"./scrollable\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nexport function horizontalMenu(tabs: HTMLElement, content: HTMLElement, onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, onTransitionEnd?: () => void, transitionTime = 250, scrollableX?: ScrollableX) {\r\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\r\n\r\n  if(tabs) {\r\n    const proxy = new Proxy(selectTab, {\r\n      apply: (target, that, args) => {\r\n        const id = +args[0];\r\n        const animate = args[1] !== undefined ? args[1] : true;\r\n  \r\n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\r\n        selectTarget(el, id, animate);\r\n      }\r\n    });\r\n\r\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\r\n      const tabContent = content.children[id] as HTMLDivElement;\r\n\r\n      if(onClick) {\r\n        const canChange = onClick(id, tabContent, animate);\r\n        if(canChange !== undefined && !canChange) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(scrollableX) {\r\n        scrollableX.scrollIntoViewNew(target.parentElement.children[id] as HTMLElement, 'center', undefined, undefined, animate ? undefined : FocusDirection.Static, transitionTime, 'x');\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        animate = false;\r\n      }\r\n\r\n      const prevId = selectTab.prevId();\r\n      if(target.classList.contains('active') || id === prevId) {\r\n        return false;\r\n      }\r\n      \r\n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\r\n\r\n      fastRaf(() => {\r\n        prev && prev.classList.remove('active');\r\n      });\r\n      \r\n      // stripe from ZINCHUK\r\n      if(useStripe && prevId !== -1 && animate) {\r\n        fastRaf(() => {\r\n          const indicator = target.querySelector('i')!;\r\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\r\n    \r\n          currentIndicator.classList.remove('animate');\r\n          indicator.classList.remove('animate');\r\n    \r\n          // We move and resize our indicator so it repeats the position and size of the previous one.\r\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\r\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\r\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\r\n  \r\n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\r\n    \r\n          requestAnimationFrame(() => {\r\n            // Now we remove the transform to let it animate to its own position and size.\r\n            indicator.classList.add('animate');\r\n            indicator.style.transform = 'none';\r\n          });\r\n        });\r\n      }\r\n      // stripe END\r\n\r\n      fastRaf(() => {\r\n        target.classList.add('active');\r\n      });\r\n      \r\n      selectTab(id, animate);\r\n    };\r\n\r\n    const useStripe = !tabs.classList.contains('no-stripe');\r\n\r\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\r\n    const tagName = tabs.firstElementChild.tagName;\r\n    tabs.addEventListener('click', function(e) {\r\n      let target = e.target as HTMLElement;\r\n      \r\n      target = findUpAsChild(target, tabs);\r\n      \r\n      //console.log('tabs click:', target);\r\n      \r\n      if(!target) return false;\r\n\r\n      let id: number;\r\n      if(target.dataset.tab) {\r\n        id = +target.dataset.tab;\r\n        if(id === -1) {\r\n          return false;\r\n        }\r\n      } else {\r\n        id = whichChild(target);\r\n      }\r\n\r\n      selectTarget(target, id);\r\n    });\r\n\r\n    return proxy;\r\n  }\r\n  \r\n  return selectTab;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n\r\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  const width = prevTabContent.getBoundingClientRect().width;\r\n  const elements = [tabContent, prevTabContent];\r\n  if(toRight) elements.reverse();\r\n  elements[0].style.filter = `brightness(80%)`;\r\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\r\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n  tabContent.classList.add('active');\r\n  void tabContent.offsetWidth; // reflow\r\n\r\n  tabContent.style.transform = '';\r\n  tabContent.style.filter = '';\r\n\r\n  return () => {\r\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\r\n  };\r\n}\r\n\r\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n  // const scrollableContainer = findUpClassName(tabContent, 'scrollable-y');\r\n  // if(scrollableContainer && scrollableContainer.style.overflowY !== 'hidden') {\r\n  //   // const scrollBarWidth = scrollableContainer.offsetWidth - scrollableContainer.clientWidth;\r\n  //   scrollableContainer.style.overflowY = 'hidden';\r\n  //   // scrollableContainer.style.paddingRight = `${scrollBarWidth}px`;\r\n  //   // this.container.classList.add('sliding');\r\n  // }\r\n\r\n  //window.requestAnimationFrame(() => {\r\n    const width = prevTabContent.getBoundingClientRect().width;\r\n    /* tabContent.style.setProperty('--width', width + 'px');\r\n    prevTabContent.style.setProperty('--width', width + 'px');\r\n\r\n    tabContent.classList.add('active'); */\r\n    //void tabContent.offsetWidth; // reflow\r\n    const elements = [tabContent, prevTabContent];\r\n    if(toRight) elements.reverse();\r\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\r\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n    tabContent.classList.add('active');\r\n    void tabContent.offsetWidth; // reflow\r\n  \r\n    tabContent.style.transform = '';\r\n  //});\r\n  \r\n  return () => {\r\n    prevTabContent.style.transform = '';\r\n\r\n    // if(scrollableContainer) {\r\n    //   // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n    //   if(isSafari) { // ! safari doesn't respect sticky header, so it flicks when overflow is changing\r\n    //     scrollableContainer.style.display = 'none';\r\n    //   }\r\n\r\n    //   scrollableContainer.style.overflowY = '';\r\n\r\n    //   if(isSafari) {\r\n    //     void scrollableContainer.offsetLeft; // reflow\r\n    //     scrollableContainer.style.display = '';\r\n    //   }\r\n\r\n    //   // scrollableContainer.style.paddingRight = '0';\r\n    //   // this.container.classList.remove('sliding');\r\n    // }\r\n  };\r\n}\r\n\r\nexport const TransitionSlider = (\r\n  content: HTMLElement, \r\n  type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, \r\n  transitionTime: number, \r\n  onTransitionEnd?: (id: number) => void, \r\n  isHeavy = true\r\n) => {\r\n  let animationFunction: TransitionFunction = null;\r\n\r\n  switch(type) {\r\n    case 'tabs':\r\n      animationFunction = slideTabs;\r\n      break;\r\n    case 'navigation':\r\n      animationFunction = slideNavigation;\r\n      break;\r\n    /* default:\r\n      break; */\r\n  }\r\n\r\n  content.dataset.animation = type;\r\n  \r\n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\r\n};\r\n\r\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\r\n\r\nconst Transition = (\r\n  content: HTMLElement, \r\n  animationFunction: TransitionFunction, \r\n  transitionTime: number, \r\n  onTransitionEnd?: (id: number) => void, \r\n  isHeavy = true,\r\n  once = false,\r\n  withAnimationListener = true\r\n) => {\r\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\r\n  let animationDeferred: CancellablePromise<void>;\r\n  // let animationStarted = 0;\r\n  let from: HTMLElement = null;\r\n\r\n  if(withAnimationListener) {\r\n    const listenerName = animationFunction ? 'transitionend' : 'animationend';\r\n\r\n    const onEndEvent = (e: TransitionEvent | AnimationEvent) => {\r\n      cancelEvent(e);\r\n  \r\n      if((e.target as HTMLElement).parentElement !== content) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\r\n  \r\n      const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\r\n      if(callback) callback();\r\n  \r\n      if(e.target !== from) {\r\n        return;\r\n      }\r\n  \r\n      if(!animationDeferred && isHeavy) return;\r\n  \r\n      if(animationDeferred) {\r\n        animationDeferred.resolve();\r\n        animationDeferred = undefined;\r\n      }\r\n  \r\n      if(onTransitionEnd) {\r\n        onTransitionEnd(selectTab.prevId());\r\n      }\r\n  \r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n  \r\n      if(once) {\r\n        content.removeEventListener(listenerName, onEndEvent/* , {capture: false} */);\r\n        from = animationDeferred = undefined;\r\n        onTransitionEndCallbacks.clear();\r\n      }\r\n    };\r\n  \r\n    // TODO: check for transition type (transform, etc) using by animationFunction\r\n    content.addEventListener(listenerName, onEndEvent/* , {passive: true, capture: false} */);\r\n  }\r\n\r\n  function selectTab(id: number | HTMLElement, animate = true, overrideFrom?: typeof from) {\r\n    if(overrideFrom) {\r\n      from = overrideFrom;\r\n    }\r\n\r\n    if(id instanceof HTMLElement) {\r\n      id = whichChild(id);\r\n    }\r\n    \r\n    const prevId = selectTab.prevId();\r\n    if(id === prevId) return false;\r\n\r\n    //console.log('selectTab id:', id);\r\n\r\n    const to = content.children[id] as HTMLElement;\r\n\r\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\r\n      animate = false;\r\n    }\r\n\r\n    if(!withAnimationListener) {\r\n      const timeout = content.dataset.timeout;\r\n      if(timeout !== undefined) {\r\n        clearTimeout(+timeout);\r\n      }\r\n\r\n      delete content.dataset.timeout;\r\n    }\r\n\r\n    if(!animate) {\r\n      if(from) from.classList.remove('active', 'to', 'from');\r\n      else if(to) { // fix instant opening back from closed slider (e.g. instant closening and opening right sidebar)\r\n        const callback = onTransitionEndCallbacks.get(to);\r\n        if(callback) {\r\n          callback();\r\n        }\r\n      }\r\n\r\n      if(to) {\r\n        to.classList.remove('to', 'from');\r\n        to.classList.add('active');\r\n      }\r\n\r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n\r\n      from = to;\r\n\r\n      if(onTransitionEnd) onTransitionEnd(id);\r\n      return;\r\n    }\r\n\r\n    if(!withAnimationListener) {\r\n      content.dataset.timeout = '' + window.setTimeout(() => {\r\n        to.classList.remove('to');\r\n        from && from.classList.remove('from');\r\n        content.classList.remove('animating', 'backwards', 'disable-hover');\r\n        delete content.dataset.timeout;\r\n      }, transitionTime);\r\n    }\r\n\r\n    if(from) {\r\n      from.classList.remove('to');\r\n      from.classList.add('from');\r\n    }\r\n\r\n    content.classList.add('animating'/* , 'disable-hover' */);\r\n    const toRight = prevId < id;\r\n    content.classList.toggle('backwards', !toRight);\r\n\r\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\r\n    if(!to) {\r\n      //prevTabContent.classList.remove('active');\r\n    } else {\r\n      if(animationFunction) {\r\n        onTransitionEndCallback = animationFunction(to, from, toRight);\r\n      } else {\r\n        to.classList.add('active');\r\n      }\r\n\r\n      to.classList.remove('from');\r\n      to.classList.add('to');\r\n    }\r\n    \r\n    if(to) {\r\n      onTransitionEndCallbacks.set(to, () => {\r\n        to.classList.remove('to');\r\n        onTransitionEndCallbacks.delete(to);\r\n      });\r\n    }\r\n\r\n    if(from/*  && false */) {\r\n      const _from = from;\r\n      const callback = () => {\r\n        _from.classList.remove('active', 'from');\r\n\r\n        if(onTransitionEndCallback) {\r\n          onTransitionEndCallback();\r\n        }\r\n\r\n        onTransitionEndCallbacks.delete(_from);\r\n      };\r\n\r\n      if(to) {\r\n        onTransitionEndCallbacks.set(_from, callback);\r\n      } else {\r\n        const timeout = window.setTimeout(callback, transitionTime);\r\n        onTransitionEndCallbacks.set(_from, () => {\r\n          clearTimeout(timeout);\r\n          onTransitionEndCallbacks.delete(_from);\r\n        });\r\n      }\r\n\r\n      if(isHeavy) {\r\n        if(!animationDeferred) {\r\n          animationDeferred = deferredPromise<void>();\r\n          // animationStarted = performance.now();\r\n        }\r\n  \r\n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\r\n      }\r\n    }\r\n    \r\n    from = to;\r\n  }\r\n\r\n  //selectTab.prevId = -1;\r\n  selectTab.prevId = () => from ? whichChild(from) : -1;\r\n  \r\n  return selectTab;\r\n};\r\n\r\nexport default Transition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's animation.ts\r\n\r\nimport { fastRaf } from './schedulers';\r\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\r\n\r\ninterface AnimationInstance {\r\n  isCancelled: boolean;\r\n  deferred: CancellablePromise<void>\r\n}\r\n\r\ntype AnimationInstanceKey = any;\r\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\r\n\r\nexport function createAnimationInstance(key: AnimationInstanceKey) {\r\n  cancelAnimationByKey(key);\r\n\r\n  const instance: AnimationInstance = {\r\n    isCancelled: false, \r\n    deferred: deferredPromise<void>()\r\n  };\r\n\r\n  instances.set(key, instance);\r\n  instance.deferred.then(() => {\r\n    instances.delete(key);\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport function getAnimationInstance(key: AnimationInstanceKey) {\r\n  return instances.get(key);\r\n}\r\n\r\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\r\n  const instance = getAnimationInstance(key);\r\n  if(instance) {\r\n    instance.isCancelled = true;\r\n    instance.deferred.resolve();\r\n  }\r\n}\r\n\r\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\r\n  if(!instance) {\r\n    instance = createAnimationInstance(key);\r\n  }\r\n\r\n  fastRaf(() => {\r\n    if(instance.isCancelled) {\r\n      return;\r\n    }\r\n    \r\n    if(tick()) {\r\n      animateSingle(tick, key, instance);\r\n    } else {\r\n      instance.deferred.resolve();\r\n    }\r\n  });\r\n\r\n  return instance.deferred;\r\n}\r\n\r\nexport function animate(tick: Function) {\r\n  fastRaf(() => {\r\n    if(tick()) {\r\n      animate(tick);\r\n    }\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's schedulers\r\nimport { NoneToVoidFunction } from \"../types\";\r\n\r\n/*\r\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(onTickEnd, fn);\r\n}\r\n\r\nexport function throttleWithNow<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(runNow, fn);\r\n}\r\n\r\nexport function onTickEnd(cb: NoneToVoidFunction) {\r\n  Promise.resolve().then(cb);\r\n}\r\n\r\nfunction runNow(fn: NoneToVoidFunction) {\r\n  fn();\r\n} */\r\n\r\nlet fastRafCallbacks: NoneToVoidFunction[] | undefined;\r\nexport function fastRaf(callback: NoneToVoidFunction) {\r\n  if(!fastRafCallbacks) {\r\n    fastRafCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      const currentCallbacks = fastRafCallbacks!;\r\n      fastRafCallbacks = undefined;\r\n      currentCallbacks.forEach((cb) => cb());\r\n    });\r\n  } else {\r\n    fastRafCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet fastRafConventionalCallbacks: NoneToVoidFunction[] | undefined, processing = false;\r\nexport function fastRafConventional(callback: NoneToVoidFunction) {\r\n  if(!fastRafConventionalCallbacks) {\r\n    fastRafConventionalCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      processing = true;\r\n      for(let i = 0; i < fastRafConventionalCallbacks.length; ++i) {\r\n        fastRafConventionalCallbacks[i]();\r\n      }\r\n\r\n      fastRafConventionalCallbacks = undefined;\r\n      processing = false;\r\n    });\r\n  } else if(processing) {\r\n    callback();\r\n  } else {\r\n    fastRafConventionalCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet rafPromise: Promise<DOMHighResTimeStamp>;\r\nexport function fastRafPromise() {\r\n  if(rafPromise) return rafPromise;\r\n\r\n  rafPromise = new Promise(requestAnimationFrame);\r\n  rafPromise.then(() => {\r\n    rafPromise = undefined;\r\n  });\r\n\r\n  return rafPromise;\r\n}\r\n\r\nexport function doubleRaf() {\r\n  return new Promise<void>((resolve) => {\r\n    fastRaf(() => {\r\n      fastRaf(resolve);\r\n    });\r\n  });\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"rlottie.worker.6777ef401e7048467332.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RLottieWorker from 'worker-loader!./rlottie/rlottie.worker';\r\nimport animationIntersector from \"../components/animationIntersector\";\r\nimport { MOUNT_CLASS_TO } from '../config/debug';\r\nimport EventListenerBase from \"../helpers/eventListenerBase\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { clamp } from '../helpers/number';\r\nimport { pause } from '../helpers/schedulers/pause';\r\nimport { IS_ANDROID, IS_APPLE, IS_APPLE_MOBILE, IS_SAFARI } from \"../environment/userAgent\";\r\nimport { logger, LogTypes } from \"./logger\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\n\r\nlet convert = (value: number) => {\r\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\r\n};\r\n\r\ntype RLottiePlayerListeners = 'enterFrame' | 'ready' | 'firstFrame' | 'cached';\r\ntype RLottieOptions = {\r\n  container?: HTMLElement, \r\n  autoplay?: boolean, \r\n  animationData: string, \r\n  loop?: boolean, \r\n  width?: number,\r\n  height?: number,\r\n  group?: string,\r\n  noCache?: true,\r\n  needUpscale?: true,\r\n  skipRatio?: number\r\n};\r\n\r\nexport class RLottiePlayer extends EventListenerBase<{\r\n  enterFrame: (frameNo: number) => void,\r\n  ready: () => void,\r\n  firstFrame: () => void,\r\n  cached: () => void\r\n}> {\r\n  public static reqId = 0;\r\n\r\n  public reqId = 0;\r\n  public curFrame: number;\r\n  public frameCount: number;\r\n  public fps: number;\r\n  public skipDelta: number;\r\n\r\n  public worker: QueryableWorker;\r\n  \r\n  public width = 0;\r\n  public height = 0;\r\n\r\n  public el: HTMLElement;\r\n  public canvas: HTMLCanvasElement;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public paused = true;\r\n  //public paused = false;\r\n  public direction = 1;\r\n  public speed = 1;\r\n  public autoplay = true;\r\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public loop = true;\r\n  public _loop: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public group = '';\r\n\r\n  private frInterval: number;\r\n  private frThen: number;\r\n  private rafId: number;\r\n\r\n  //private caching = false;\r\n  //private removed = false;\r\n\r\n  private frames: {[frameNo: string]: Uint8ClampedArray} = {};\r\n  public imageData: ImageData;\r\n  public clamped: Uint8ClampedArray;\r\n  public cachingDelta = 0;\r\n\r\n  //private playedTimes = 0;\r\n\r\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\r\n  private frameListener: () => void;\r\n\r\n  constructor({worker, options}: {\r\n    worker: QueryableWorker,\r\n    options: RLottieOptions\r\n  }) {\r\n    super(true);\r\n\r\n    this.reqId = ++RLottiePlayer['reqId'];\r\n    this.el = options.container;\r\n    this.worker = worker;\r\n\r\n    for(let i in options) {\r\n      if(this.hasOwnProperty(i)) {\r\n        // @ts-ignore\r\n        this[i] = options[i];\r\n      }\r\n    }\r\n\r\n    this._loop = this.loop;\r\n    this._autoplay = this.autoplay;\r\n\r\n    // * Skip ratio (30fps)\r\n    let skipRatio: number;\r\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\r\n    else if((IS_ANDROID || IS_APPLE_MOBILE || (IS_APPLE && !IS_SAFARI)) && this.width < 100 && this.height < 100) {\r\n      skipRatio = 0.5;\r\n    }\r\n\r\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\r\n\r\n    //options.needUpscale = true;\r\n\r\n    // * Pixel ratio\r\n    //const pixelRatio = window.devicePixelRatio;\r\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\r\n    if(pixelRatio > 1) {\r\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\r\n      if(options.needUpscale) {\r\n        this.width = Math.round(this.width * pixelRatio);\r\n        this.height = Math.round(this.height * pixelRatio);\r\n      } else if(pixelRatio > 1) {\r\n        if(this.width > 100 && this.height > 100) {\r\n          if(IS_APPLE || !mediaSizes.isMobile) {\r\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\r\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\r\n            this.width = Math.round(this.width * pixelRatio);\r\n            this.height = Math.round(this.height * pixelRatio);\r\n          } else if(pixelRatio > 2.5) {\r\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\r\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\r\n          }\r\n        } else {\r\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\r\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\r\n        }\r\n      }\r\n    }\r\n\r\n    //options.noCache = true;\r\n    \r\n    // * Cache frames params\r\n    if(!options.noCache/*  && false */) {\r\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\r\n      if(IS_APPLE && this.width > 100 && this.height > 100) {\r\n        this.cachingDelta = 2; //2 // 50%\r\n      } else if(this.width < 100 && this.height < 100) {\r\n        this.cachingDelta = Infinity; // 100%\r\n      } else {\r\n        this.cachingDelta = 4; // 75%\r\n      }\r\n    }\r\n    \r\n    // this.cachingDelta = Infinity;\r\n    // if(isApple) {\r\n    //   this.cachingDelta = 0; //2 // 50%\r\n    // }\r\n\r\n    /* this.width *= 0.8;\r\n    this.height *= 0.8; */\r\n    \r\n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.classList.add('rlottie');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n    this.context = this.canvas.getContext('2d');\r\n\r\n    this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n    this.imageData = new ImageData(this.width, this.height);\r\n  }\r\n\r\n  public clearCache() {\r\n    this.frames = {};\r\n  }\r\n\r\n  public sendQuery(methodName: string, ...args: any[]) {\r\n    //console.trace('RLottie sendQuery:', methodName);\r\n    this.worker.sendQuery(methodName, this.reqId, ...args);\r\n  }\r\n\r\n  public loadFromData(jsonString: string) {\r\n    this.sendQuery('loadFromData', jsonString, this.width, this.height/* , this.canvas.transferControlToOffscreen() */);\r\n  }\r\n\r\n  public play() {\r\n    if(!this.paused) return;\r\n\r\n    //return;\r\n\r\n    //console.log('RLOTTIE PLAY' + this.reqId);\r\n\r\n    this.paused = false;\r\n    this.setMainLoop();\r\n  }\r\n\r\n  public pause(clearPendingRAF = true) {\r\n    if(this.paused) return;\r\n\r\n    this.paused = true;\r\n    if(clearPendingRAF) {\r\n      clearTimeout(this.rafId);\r\n    }\r\n    //window.cancelAnimationFrame(this.rafId);\r\n  }\r\n\r\n  public stop(renderFirstFrame = true) {\r\n    this.pause();\r\n\r\n    this.curFrame = this.direction === 1 ? 0 : this.frameCount;\r\n    if(renderFirstFrame) {\r\n      this.requestFrame(this.curFrame);\r\n      //this.sendQuery('renderFrame', this.curFrame);\r\n    }\r\n  }\r\n\r\n  public restart() {\r\n    this.stop(false);\r\n    this.play();\r\n  }\r\n\r\n  public setSpeed(speed: number) {\r\n    this.speed = speed;\r\n\r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public setDirection(direction: number) {\r\n    this.direction = direction;\r\n    \r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public remove() {\r\n    //alert('remove');\r\n    lottieLoader.onDestroy(this.reqId);\r\n    this.pause();\r\n    this.sendQuery('destroy');\r\n    //this.removed = true;\r\n  }\r\n\r\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\r\n    /* this.setListenerResult('enterFrame', frameNo);\r\n    return; */\r\n\r\n    try {\r\n      this.imageData.data.set(frame);\r\n      \r\n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\r\n      //let perf = performance.now();\r\n      this.context.putImageData(this.imageData, 0, 0);\r\n      //console.log('renderFrame2 perf:', performance.now() - perf);\r\n    } catch(err) {\r\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\r\n      this.autoplay = false;\r\n      this.pause();\r\n      return;\r\n    }\r\n    \r\n    //console.log('set result enterFrame', frameNo);\r\n    this.dispatchEvent('enterFrame', frameNo);\r\n  }\r\n\r\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\r\n    //console.log('renderFrame', frameNo, this);\r\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames[frameNo]) {\r\n      this.frames[frameNo] = new Uint8ClampedArray(frame);//frame;\r\n    }\r\n\r\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\r\n      this.setListenerResult('enterFrame', frameNo);\r\n      if(frameNo === (this.frameCount - 1)) {\r\n        this.setListenerResult('cached');\r\n      }\r\n\r\n      return;\r\n    } */\r\n\r\n    if(this.frInterval) {\r\n      const now = Date.now(), delta = now - this.frThen;\r\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\r\n\r\n      if(delta < 0) {\r\n        if(this.rafId) clearTimeout(this.rafId);\r\n        return this.rafId = window.setTimeout(() => {\r\n          this.renderFrame2(frame, frameNo);\r\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\r\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\r\n      }\r\n    }\r\n\r\n    this.renderFrame2(frame, frameNo);\r\n  }\r\n\r\n  public requestFrame(frameNo: number) {\r\n    if(this.frames[frameNo]) {\r\n      this.renderFrame(this.frames[frameNo], frameNo);\r\n    } else if(IS_SAFARI) {\r\n      this.sendQuery('renderFrame', frameNo);\r\n    } else {\r\n      if(!this.clamped.length) { // fix detached\r\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n      }\r\n      \r\n      this.sendQuery('renderFrame', frameNo, this.clamped);\r\n    }\r\n  }\r\n\r\n  private mainLoopForwards() {\r\n    const frame = (this.curFrame + this.skipDelta) >= this.frameCount ? this.curFrame = 0 : this.curFrame += this.skipDelta;\r\n    //console.log('mainLoopForwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame + this.skipDelta) >= this.frameCount) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  \r\n  private mainLoopBackwards() {\r\n    const frame = (this.curFrame - this.skipDelta) < 0 ? this.curFrame = this.frameCount - 1 : this.curFrame -= this.skipDelta;\r\n    //console.log('mainLoopBackwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame - this.skipDelta) < 0) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public setMainLoop() {\r\n    //window.cancelAnimationFrame(this.rafId);\r\n    clearTimeout(this.rafId);\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n\r\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\r\n\r\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\r\n    this.currentMethod = method;\r\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\r\n\r\n    //setTimeout(() => {\r\n      //this.addListener('enterFrame', this.frameListener);\r\n    //}, 0);\r\n\r\n    if(this.frameListener && this.listenerResults.hasOwnProperty('enterFrame')) {\r\n      this.frameListener();\r\n    }\r\n  \r\n    //this.mainLoop(method);\r\n    //this.r(method);\r\n    //method();\r\n  }\r\n\r\n  public async onLoad(frameCount: number, fps: number) {\r\n    this.curFrame = this.direction === 1 ? 0 : frameCount - 1;\r\n    this.frameCount = frameCount;\r\n    this.fps = fps;\r\n\r\n    // * Handle 30fps stickers if 30fps set\r\n    if(this.fps < 60 && this.skipDelta !== 1) {\r\n      const diff = 60 / fps;\r\n      this.skipDelta = this.skipDelta / diff | 0;\r\n    }\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n    //this.sendQuery('renderFrame', 0);\r\n    \r\n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \r\n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \r\n\r\n    /* console.time('cache' + this.reqId);\r\n    for(let i = 0; i < frameCount; ++i) {\r\n      //if(this.removed) return;\r\n      \r\n      if(i % 4) {\r\n        await new Promise((resolve) => {\r\n          delete this.listenerResults.enterFrame;\r\n          this.addListener('enterFrame', resolve, true);\r\n          this.requestFrame(i);\r\n        });  \r\n      }\r\n    }\r\n    \r\n    console.timeEnd('cache' + this.reqId); */\r\n    //console.log('cached');\r\n    /* this.el.innerHTML = '';\r\n    this.el.append(this.canvas);\r\n    return; */\r\n\r\n    this.requestFrame(0);\r\n    this.dispatchEvent('ready');\r\n    this.addEventListener('enterFrame', () => {\r\n      this.dispatchEvent('firstFrame');\r\n\r\n      this.el && this.el.appendChild(this.canvas);\r\n\r\n      //console.log('enterFrame firstFrame');\r\n \r\n      //let lastTime = this.frThen;\r\n      this.frameListener = () => {\r\n        if(this.paused) {\r\n          return;\r\n        }\r\n\r\n        const time = Date.now();\r\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\r\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\r\n          return;\r\n        } */\r\n\r\n        //lastTime = time;\r\n\r\n        this.frThen = time + this.frInterval;\r\n        const canContinue = this.currentMethod();\r\n        if(!canContinue && !this.loop && this.autoplay) {\r\n          this.autoplay = false;\r\n        }\r\n      };\r\n\r\n      this.addEventListener('enterFrame', this.frameListener);\r\n    }, {once: true});\r\n  }\r\n}\r\n\r\nclass QueryableWorker extends EventListenerBase<any> {\r\n  constructor(private worker: Worker, private defaultListener: (data: any) => void = () => {}, onError?: (error: any) => void) {\r\n    super();\r\n\r\n    if(onError) {\r\n      this.worker.onerror = onError;\r\n    }\r\n\r\n    this.worker.onmessage = (event) => {\r\n      //return;\r\n      //console.log('worker onmessage', event.data);\r\n      if(event.data instanceof Object &&\r\n        event.data.hasOwnProperty('queryMethodListener') &&\r\n        event.data.hasOwnProperty('queryMethodArguments')) {\r\n        /* if(event.data.queryMethodListener === 'frame') {\r\n          return;\r\n        } */\r\n\r\n        this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\r\n      } else {\r\n        this.defaultListener.call(this, event.data);\r\n      }\r\n    };\r\n  }\r\n\r\n  public postMessage(message: any) {\r\n    this.worker.postMessage(message);\r\n  }\r\n\r\n  public terminate() {\r\n    this.worker.terminate();\r\n  }\r\n\r\n  public sendQuery(queryMethod: string, ...args: any[]) {\r\n    if(IS_SAFARI) {\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      });\r\n    } else {\r\n      //const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\r\n      const transfer: ArrayBuffer[] = [];\r\n      args.forEach(arg => {\r\n        if(arg instanceof ArrayBuffer) {\r\n          transfer.push(arg);\r\n        }\r\n  \r\n        if(arg.buffer && arg.buffer instanceof ArrayBuffer) {\r\n          transfer.push(arg.buffer);\r\n        }\r\n      });\r\n  \r\n      //console.log('transfer', transfer);\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      }, transfer as PostMessageOptions);\r\n    }\r\n  }\r\n}\r\n\r\ntype LottieShape = {\r\n  c: {\r\n    k: number[]\r\n  },\r\n  ty: 'st' | 'fl',\r\n  it?: LottieShape[]\r\n};\r\nclass LottieLoader {\r\n  public isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\r\n  public loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\r\n  public loaded = false;\r\n\r\n  // https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\r\n  private static COLORREPLACEMENTS = [\r\n    [\r\n      [0xf77e41, 0xcb7b55],\r\n\t\t\t[0xffb139, 0xf6b689],\r\n\t\t\t[0xffd140, 0xffcda7],\r\n\t\t\t[0xffdf79, 0xffdfc5],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0xa45a38],\r\n\t\t\t[0xffb139, 0xdf986b],\r\n\t\t\t[0xffd140, 0xedb183],\r\n\t\t\t[0xffdf79, 0xf4c3a0],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x703a17],\r\n\t\t\t[0xffb139, 0xab673d],\r\n\t\t\t[0xffd140, 0xc37f4e],\r\n\t\t\t[0xffdf79, 0xd89667],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x4a2409],\r\n\t\t\t[0xffb139, 0x7d3e0e],\r\n\t\t\t[0xffd140, 0x965529],\r\n\t\t\t[0xffdf79, 0xa96337],\r\n    ],\r\n\r\n    [\r\n\t\t\t[0xf77e41, 0x200f0a],\r\n\t\t\t[0xffb139, 0x412924],\r\n\t\t\t[0xffd140, 0x593d37],\r\n\t\t\t[0xffdf79, 0x63453f],\r\n    ]\r\n  ];\r\n\r\n  private workersLimit = 4;\r\n  private players: {[reqId: number]: RLottiePlayer} = {};\r\n\r\n  private workers: QueryableWorker[] = [];\r\n  private curWorkerNum = 0;\r\n\r\n  private log = logger('LOTTIE', LogTypes.Error);\r\n\r\n  public getAnimation(element: HTMLElement) {\r\n    for(const i in this.players) {\r\n      if(this.players[i].el === element) {\r\n        return this.players[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public setLoop(loop: boolean) {\r\n    for(const i in this.players) {\r\n      const player = this.players[i];\r\n      player.loop = loop;\r\n      player.autoplay = player._autoplay;\r\n    }\r\n  }\r\n\r\n  public loadLottieWorkers() {\r\n    if(this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    return this.loadPromise = new Promise((resolve, reject) => {\r\n      let remain = this.workersLimit;\r\n      for(let i = 0; i < this.workersLimit; ++i) {\r\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\r\n\r\n        worker.addEventListener('ready', () => {\r\n          this.log('worker #' + i + ' ready');\r\n\r\n          worker.addEventListener('frame', this.onFrame);\r\n          worker.addEventListener('loaded', this.onPlayerLoaded);\r\n          worker.addEventListener('error', this.onPlayerError);\r\n\r\n          --remain;\r\n          if(!remain) {\r\n            this.log('workers ready');\r\n            resolve();\r\n            this.loaded = true;\r\n          }\r\n        }, {once: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  private applyReplacements(object: {\r\n    layers: Array<{shapes: LottieShape[]}>\r\n  }, toneIndex: number) {\r\n    const replacements = LottieLoader.COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\r\n\r\n    const applyTo = (smth: LottieShape) => {\r\n      const k = smth.c.k;\r\n      const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\r\n\r\n      const foundReplacement = replacements.find(p => p[0] === color);\r\n      if(foundReplacement) {\r\n        k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\r\n        k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\r\n        k[2] = (foundReplacement[1] & 255) / 255;\r\n      }\r\n\r\n      //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\r\n    };\r\n\r\n    const checkSmth = (smth: LottieShape) => {\r\n      switch(smth.ty) {\r\n        case 'st':\r\n        case 'fl':\r\n          applyTo(smth);\r\n          break;\r\n      }\r\n\r\n      if(smth.hasOwnProperty('it')) {\r\n        iterateIt(smth.it);\r\n      }\r\n    };\r\n\r\n    const iterateIt = (it: LottieShape['it']) => {\r\n      for(const smth of it) {\r\n        checkSmth(smth);\r\n      }\r\n    };\r\n\r\n    try {\r\n      for(const layer of object.layers) {\r\n        if(!layer.shapes) continue;\r\n  \r\n        for(const shape of layer.shapes) {\r\n          if(!shape.it) {\r\n            checkSmth(shape);\r\n            continue;\r\n          }\r\n\r\n          iterateIt(shape.it);\r\n        }\r\n      }\r\n    } catch(err) {\r\n      this.log.warn('cant apply replacements', err, object, toneIndex);\r\n    }\r\n  }\r\n\r\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    \r\n    if(!this.loaded) {\r\n      this.loadLottieWorkers();\r\n    }\r\n    \r\n    return fetch(url)\r\n    .then(res => res.arrayBuffer())\r\n    .then(data => apiManager.invokeCrypto('gzipUncompress', data, true))\r\n    /* .then(str => {\r\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\r\n    }) */\r\n    .then(str => {\r\n      return this.loadAnimationWorker(Object.assign(params, {animationData: str as string/* JSON.parse(str) */, needUpscale: true}));\r\n    });\r\n  }\r\n\r\n  public waitForFirstFrame(player: RLottiePlayer): Promise<void> {\r\n    return Promise.race([\r\n      /* new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', () => {\r\n          setTimeout(() => resolve(), 1500);\r\n        }, true);\r\n      }) */\r\n      new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', resolve, {once: true});\r\n      }),\r\n      pause(2500)\r\n    ]);\r\n  }\r\n\r\n  public async loadAnimationWorker(params: RLottieOptions, group = '', toneIndex = -1): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    //params.autoplay = true;\r\n\r\n    if(toneIndex >= 1 && toneIndex <= 5) {\r\n      /* params.animationData = copy(params.animationData);\r\n      this.applyReplacements(params.animationData, toneIndex); */\r\n\r\n      const newAnimationData = JSON.parse(params.animationData);\r\n      this.applyReplacements(newAnimationData, toneIndex);\r\n      params.animationData = JSON.stringify(newAnimationData);\r\n    }\r\n\r\n    if(!this.loaded) {\r\n      await this.loadLottieWorkers();\r\n    }\r\n\r\n    if((!params.width || !params.height) && params.container) {\r\n      params.width = parseInt(params.container.style.width);\r\n      params.height = parseInt(params.container.style.height);\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      throw new Error('No size for sticker!');\r\n    }\r\n\r\n    params.group = group;\r\n\r\n    const player = this.initPlayer(params);\r\n\r\n    if(group !== 'none') {\r\n      animationIntersector.addAnimation(player, group);\r\n    }\r\n\r\n    return player;\r\n  }\r\n\r\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\r\n      return;\r\n    }\r\n\r\n    this.log.debug('onPlayerLoaded');\r\n    rlPlayer.onLoad(frameCount, fps);\r\n    //rlPlayer.addListener('firstFrame', () => {\r\n      //animationIntersector.addAnimation(player, group);\r\n    //}, true);\r\n  };\r\n\r\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\r\n      return;\r\n    }\r\n\r\n    rlPlayer.clamped = frame;\r\n    rlPlayer.renderFrame(frame, frameNo);\r\n  };\r\n\r\n  private onPlayerError = (reqId: number, error: Error) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(rlPlayer) {\r\n      // ! will need refactoring later, this is not the best way to remove the animation\r\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\r\n      animations.forEach(animation => {\r\n        animationIntersector.checkAnimation(animation, true, true);\r\n      });\r\n    }\r\n  };\r\n\r\n  public onDestroy(reqId: number) {\r\n    delete this.players[reqId];\r\n  }\r\n\r\n  public destroyWorkers() {\r\n    this.workers.forEach((worker, idx) => {\r\n      worker.terminate();\r\n      this.log('worker #' + idx + ' terminated');\r\n    });\r\n\r\n    this.log('workers destroyed');\r\n    this.workers.length = 0;\r\n  }\r\n\r\n  private initPlayer(options: RLottieOptions) {\r\n    const rlPlayer = new RLottiePlayer({\r\n      worker: this.workers[this.curWorkerNum++],\r\n      options\r\n    });\r\n\r\n    this.players[rlPlayer.reqId] = rlPlayer;\r\n    if(this.curWorkerNum >= this.workers.length) {\r\n      this.curWorkerNum = 0;\r\n    }\r\n\r\n    rlPlayer.loadFromData(options.animationData);\r\n\r\n    return rlPlayer;\r\n  }\r\n}\r\n\r\nconst lottieLoader = new LottieLoader();\r\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\r\nexport default lottieLoader;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport function numberThousandSplitter(x: number, joiner = ' ') {\r\n  const parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, joiner);\r\n  return parts.join(\".\");\r\n}\r\n\r\nexport function formatBytes(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function formatNumber(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0';\r\n\r\n  const k = 1000;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['', 'K', 'M', 'B', 'T'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\r\n}\r\n\r\nexport function clamp(v: number, min: number, max: number): number {\r\n  return v < min ? min : ((v > max) ? max : v);\r\n}\r\n\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\r\n  if(!element) {\r\n    return false;\r\n  }\r\n\r\n  parentNode = parentNode || document.body;\r\n  if(element === parentNode) {\r\n    return true;\r\n  }\r\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\r\n} */\r\nexport default function isInDOM(element: Element): boolean {\r\n  return element?.isConnected;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Page from \"./page\";\r\nimport lottieLoader from \"../lib/lottieLoader\";\r\nimport { horizontalMenu } from \"../components/horizontalMenu\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nclass PagesManager {\r\n  private pageId = -1;\r\n  private page: Page;\r\n\r\n  private selectTab: ReturnType<typeof horizontalMenu>;\r\n  public pagesDiv: HTMLDivElement;\r\n  public scrollableDiv: HTMLElement;\r\n\r\n  constructor() {\r\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\r\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\r\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\r\n      if(this.page?.onShown) {\r\n        this.page.onShown();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPage(page: Page) {\r\n    if(page.isAuthPage) {\r\n      this.pagesDiv.style.display = '';\r\n\r\n      let id = whichChild(page.pageEl);\r\n      if(this.pageId === id) return;\r\n\r\n      this.selectTab(id);\r\n\r\n      if(this.pageId !== -1 && id > 1) {\r\n        lottieLoader.loadLottieWorkers();\r\n      }\r\n\r\n\r\n\r\n      this.pageId = id;\r\n\r\n      if(this.scrollableDiv) {\r\n        fastSmoothScroll(this.scrollableDiv, this.scrollableDiv.firstElementChild as HTMLElement, 'start');\r\n      }\r\n    } else {\r\n      this.pagesDiv.style.display = 'none';\r\n      page.pageEl.style.display = '';\r\n\r\n      this.pageId = -1;\r\n    }\r\n\r\n    this.page = page;\r\n  }\r\n}\r\n\r\nconst pagesManager = new PagesManager();\r\nMOUNT_CLASS_TO.pagesManager = pagesManager;\r\nexport default pagesManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport pagesManager from \"./pagesManager\";\r\n\r\nexport default class Page {\r\n  public pageEl: HTMLDivElement;\r\n  private installed = false;\r\n\r\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\r\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\r\n  }\r\n\r\n  public async mount(...args: any[]) {\r\n    //this.pageEl.style.display = '';\r\n\r\n    if(this.onMount) {\r\n      this.onMount(...args);\r\n    }\r\n\r\n    if(!this.installed) {\r\n      if(this.onFirstMount) {\r\n        try {\r\n          const res = this.onFirstMount(...args);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        } catch(err) {\r\n          console.error('PAGE MOUNT ERROR:', err);\r\n        }\r\n      }\r\n      \r\n      this.installed = true;\r\n    }\r\n\r\n    pagesManager.setPage(this);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { RLottiePlayer } from \"../lib/lottieLoader\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { IS_SAFARI } from \"../environment/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\nimport { indexOfAndSplice } from \"../helpers/array\";\r\n\r\nexport interface AnimationItem {\r\n  el: HTMLElement,\r\n  group: string,\r\n  animation: RLottiePlayer | HTMLVideoElement\r\n};\r\n\r\nexport class AnimationIntersector {\r\n  public observer: IntersectionObserver;\r\n  private visible: Set<AnimationItem> = new Set();\r\n\r\n  private byGroups: {[group: string]: AnimationItem[]} = {};\r\n  private lockedGroups: {[group: string]: true} = {};\r\n  private onlyOnePlayableGroup: string = '';\r\n  \r\n  private intersectionLockedGroups: {[group: string]: true} = {};\r\n  private videosLocked = false;\r\n\r\n  constructor() {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      if(rootScope.idle.isIDLE) return;\r\n\r\n      for(const entry of entries) {\r\n        const target = entry.target;\r\n\r\n        for(const group in this.byGroups) {\r\n          if(this.intersectionLockedGroups[group]) {\r\n            continue;\r\n          }\r\n\r\n          const player = this.byGroups[group].find(p => p.el === target);\r\n          if(player) {\r\n            if(entry.isIntersecting) {\r\n              this.visible.add(player);\r\n              this.checkAnimation(player, false);\r\n            } else {\r\n              this.visible.delete(player);\r\n              this.checkAnimation(player, true);\r\n\r\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\r\n                //console.warn('will clear cache', player);\r\n                player.animation.clearCache();\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('media_play', ({doc}) => {\r\n      if(doc.type === 'round') {\r\n        this.videosLocked = true;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n\r\n    rootScope.addEventListener('media_pause', () => {\r\n      if(this.videosLocked) {\r\n        this.videosLocked = false;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAnimations(element: HTMLElement) {\r\n    const found: AnimationItem[] = [];\r\n    for(const group in this.byGroups) {\r\n      for(const player of this.byGroups[group]) {\r\n        if(player.el === element) {\r\n          found.push(player);\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  public removeAnimation(player: AnimationItem) {\r\n    //console.log('destroy animation');\r\n    const {el, animation} = player;\r\n    animation.remove();\r\n\r\n    if(animation instanceof HTMLVideoElement && IS_SAFARI) {\r\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\r\n        animation.src = '';\r\n        animation.load();\r\n      }, 1e3);\r\n    }\r\n\r\n    for(const group in this.byGroups) {\r\n      indexOfAndSplice(this.byGroups[group], player);\r\n    }\r\n  \r\n    this.observer.unobserve(el);\r\n    this.visible.delete(player);\r\n  }\r\n\r\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\r\n    const player = {\r\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \r\n      animation: animation, \r\n      group\r\n    };\r\n\r\n    if(animation instanceof RLottiePlayer) {\r\n      if(!rootScope.settings.stickers.loop && animation.loop) {\r\n        animation.loop = rootScope.settings.stickers.loop;\r\n      }\r\n    }\r\n\r\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\r\n    this.observer.observe(player.el);\r\n  }\r\n\r\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\r\n    if(rootScope.idle.isIDLE) return;\r\n    \r\n    const groups = group /* && false */ ? [group] : Object.keys(this.byGroups);\r\n\r\n    if(group && !this.byGroups[group]) {\r\n      //console.warn('no animation group:', group);\r\n      this.byGroups[group] = [];\r\n      return;\r\n    }\r\n\r\n    for(const group of groups) {\r\n      const animations = this.byGroups[group];\r\n\r\n      animations.forEach(player => {\r\n        this.checkAnimation(player, blurred, destroy);\r\n      });\r\n    }\r\n  }\r\n\r\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\r\n    const {el, animation, group} = player;\r\n    //return;\r\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\r\n      this.removeAnimation(player);\r\n      return;\r\n    }\r\n\r\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\r\n      if(!animation.paused) {\r\n        //console.warn('pause animation:', animation);\r\n        animation.pause();\r\n      }\r\n    } else if(animation.paused && \r\n      this.visible.has(player) && \r\n      animation.autoplay && \r\n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group)\r\n    ) {\r\n      //console.warn('play animation:', animation);\r\n      animation.play();\r\n    }\r\n  }\r\n\r\n  public setOnlyOnePlayableGroup(group: string) {\r\n    this.onlyOnePlayableGroup = group;\r\n  }\r\n\r\n  public lockGroup(group: string) {\r\n    this.lockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockGroup(group: string) {\r\n    delete this.lockedGroups[group];\r\n    this.checkAnimations(undefined, group);\r\n  }\r\n\r\n  public refreshGroup(group: string) {\r\n    const animations = this.byGroups[group];\r\n    if(animations && animations.length) {\r\n      animations.forEach(animation => {\r\n        this.observer.unobserve(animation.el);\r\n      });\r\n\r\n      window.requestAnimationFrame(() => {\r\n        animations.forEach(animation => {\r\n          this.observer.observe(animation.el);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public lockIntersectionGroup(group: string) {\r\n    this.intersectionLockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockIntersectionGroup(group: string) {\r\n    delete this.intersectionLockedGroups[group];\r\n    this.refreshGroup(group);\r\n  }\r\n}\r\n\r\nconst animationIntersector = new AnimationIntersector();\r\nif(MOUNT_CLASS_TO) {\r\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\r\n}\r\nexport default animationIntersector;"],"sourceRoot":""}