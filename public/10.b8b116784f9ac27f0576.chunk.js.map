{"version":3,"sources":["webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/helpers/dom/isSwipingBackSafari.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/helpers/dom/htmlToSpan.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/components/ripple.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/helpers/dom/clickEvent.ts","webpack:///./src/components/button.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/misc.ts","webpack:///./src/components/inputField.ts","webpack:///./src/helpers/dom/selectElementContents.ts","webpack:///./src/components/appNavigationController.ts","webpack:///./src/components/singleTransition.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/dispatchEvent.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/helpers/sequentialDom.ts"],"names":["passwordManager","invokeApi","then","result","settings","this","getState","state","currentHashPromise","newHashPromise","params","password","new_settings","_","hint","email","currentPassword","invokeCrypto","Promise","resolve","newAlgo","new_algo","salt1","Uint8Array","length","randomize","set","newPassword","all","hashes","new_password_hash","options","inputCheckPassword","auth","setUser","user","code","findUpAttribute","el","attribute","closest","markdownTags","bold","match","entityName","underline","italic","monospace","strikethrough","link","mentionName","getRichElementValue","node","lines","line","selNode","selOffset","entities","offset","nodeType","nodeValue","push","substr","trim","parentNode","parentElement","type","tag","getAttribute","url","href","user_id","dataset","follow","toUserId","isSelected","isBlock","tagName","join","splice","HTMLImageElement","alt","curChild","firstChild","nextSibling","isInputEmpty","element","hasAttribute","value","LoginPage","document","body","querySelector","className","container","createElement","imageDiv","title","titleLangKey","append","subtitle","subtitleLangKey","withInputWrapper","inputWrapper","isSwipingBackSafari","e","TouchEvent","touches","clientX","PasswordInputField","super","plainText","passwordVisible","onVisibilityClick","toggleVisible","classList","toggle","input","onVisibilityClickAdditional","setAttribute","autocomplete","stealthy","add","tabIndex","prepend","insertBefore","cloneNode","addEventListener","htmlToSpan","html","span","innerHTML","PasswordMonkey","passwordInputField","size","needFrame","loadPromise","loadAnimationFromURL","loop","autoplay","width","height","noCache","_animation","animation","currentFrame","direction","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","remove","rippleClickId","ripple","elem","callback","onEnd","r","handler","contains","drawRipple","clientY","startTime","Date","now","clickId","duration","window","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","sqrt","abs","x","y","style","isRippleUnneeded","target","includes","touchEnd","animationsEnabled","once","cancelBubble","stopPropagation","passive","button","passwordInput","page","btnNext","btnNextI18n","IntlElement","key","label","name","getStateInterval","setInterval","_state","wrapEmojiText","setLabel","onSubmit","update","preloader","check","response","clearInterval","m","default","mount","monkey","removeAttribute","catch","err","select","isMobile","load","focus","pushToState","CLICK_EVENT_NAME","attachClickEvent","listenerSetter","bind","touchMouseDown","detachClickEvent","simulateClickEvent","asDiv","icon","noRipple","rippleSquare","onlyMobile","disabled","text","replaceContent","lastChild","replaceWith","textContent","putPreloader","returnDiv","div","appendChild","insertAdjacentHTML","lastElementChild","setButtonLoader","onMouseMove","openedMenu","diffX","right","diffY","bottom","closeBtnMenu","onClick","menuOverlay","dispatchEvent","openedMenuOnClose","removeByType","openBtnMenu","menuElement","onClose","pushItem","onPop","canAnimate","positionMenu","pageX","pageY","side","scrollWidth","menuWidth","scrollHeight","menuHeight","windowWidth","windowHeight","verticalSide","sides","intermediateX","intermediateY","possibleSides","_cancelContextMenuOpening","_cancelContextMenuOpeningTimeout","cancelContextMenuOpening","clearTimeout","attachContextMenuListener","removeManual","timeout","capture","onCancel","init","preventDefault","originalEvent","clipboardData","getData","parseEntities","filter","wrapRichText","noLinks","wrappingDraft","execCommand","InputState","required","validate","undefined","maxLength","showLengthOn","min","round","placeholder","processInput","labelText","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","border","labelEl","showingLength","wasError","inputLength","getRichValue","diff","isError","range","createRange","selectNodeContents","sel","getSelection","removeAllRanges","addRange","selectElementContents","labelOptions","setHeight","newHeight","currentHeight","transitionDuration","log","setValueSilently","fireFakeInput","originalValue","isValid","isChanged","silent","wrapDraftText","setDraftValue","Error","Valid","setState","appNavigationController","navigations","id","manual","debug","currentHash","location","hash","isPossibleSwipe","onHashChange","replaceState","pushState","item","pop","handleItem","onEscape","back","history","scrollRestoration","good","noBlurOnPop","i","index","ret","findItemByType","noHistory","origin","pathname","single","SetTransition","forwards","onTransitionEnd","useRafs","raf","cancelAnimationFrame","afterTimeout","toggleDisability","elements","disable","forEach","simulateEvent","event","Event","bubbles","cancelable","field","withEntities","combineSameEntities","sequentialDom","promises","scheduled","kind","promise","scheduleFlush","do","read","write"],"mappings":"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","file":"10.b8b116784f9ac27f0576.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          apiManager.setUser(auth.user);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"font-weight\"], b',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    const nodeValue = node.nodeValue;\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.trim()) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest && closest.getAttribute('contenteditable') === null) {\r\n            if(tag.entityName === 'messageEntityTextUrl') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                url: (parentElement as HTMLAnchorElement).href,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            } else if(tag.entityName === 'messageEntityMentionName') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                offset: offset.offset,\r\n                length: nodeValue.length,\r\n                user_id: parentElement.dataset.follow.toUserId()\r\n              });\r\n            } else {\r\n              entities.push({\r\n                _: tag.entityName as any,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = (selNode === node);\r\n  const isBlock = node.tagName === 'DIV' || node.tagName === 'P';\r\n  if(isBlock && line.length || node.tagName === 'BR') {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  } else if(node instanceof HTMLImageElement) {\r\n    const alt = node.alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { IS_MOBILE_SAFARI } from \"../../environment/userAgent\";\n\nexport default function isSwipingBackSafari(e: TouchEvent | MouseEvent) {\n  return IS_MOBILE_SAFARI && e instanceof TouchEvent && e.touches[0].clientX < 30;\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n    /* input.readOnly = true;\r\n\r\n    input.addEventListener('focus', () => {\r\n      input.removeAttribute('readonly');\r\n    }, {once: true}); */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function htmlToSpan(html: string) {\r\n  const span = document.createElement('span');\r\n  span.innerHTML = html;\r\n  return span;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: Promise<void>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport sequentialDom from \"../helpers/sequentialDom\";\r\nimport {IS_TOUCH_SUPPORTED} from \"../environment/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nlet rippleClickId = 0;\r\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\r\n  //return;\r\n  if(elem.querySelector('.c-ripple')) return;\r\n  elem.classList.add('rp');\r\n  \r\n  let r = document.createElement('div');\r\n  r.classList.add('c-ripple');\r\n\r\n  const isSquare = elem.classList.contains('rp-square');\r\n  if(isSquare) {\r\n    r.classList.add('is-square');\r\n  }\r\n\r\n  elem[prepend ? 'prepend' : 'append'](r);\r\n\r\n  let handler: () => void;\r\n  //let animationEndPromise: Promise<number>;\r\n  const drawRipple = (clientX: number, clientY: number) => {\r\n    const startTime = Date.now();\r\n    const elem = document.createElement('div');\r\n\r\n    const clickId = rippleClickId++;\r\n    \r\n    //console.log('ripple drawRipple');\r\n    \r\n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\r\n    //console.log('ripple duration', duration);\r\n\r\n    handler = () => {\r\n    //handler = () => animationEndPromise.then((duration) => {\r\n      //console.log('ripple animation was:', duration);\r\n\r\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\r\n      //return;\r\n      let elapsedTime = Date.now() - startTime;\r\n      const cb = () => {\r\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\r\n        sequentialDom.mutate(() => {\r\n          elem.remove();\r\n        });\r\n        \r\n        if(onEnd) onEnd(clickId);\r\n      };\r\n      if(elapsedTime < duration) {\r\n        let delay = Math.max(duration - elapsedTime, duration / 2);\r\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\r\n\r\n        setTimeout(cb, delay);\r\n      } else {\r\n        elem.classList.add('hiding');\r\n        setTimeout(cb, duration / 2);\r\n      }\r\n\r\n      if(!IS_TOUCH_SUPPORTED) {\r\n        window.removeEventListener('contextmenu', handler);\r\n      }\r\n\r\n      handler = null;\r\n      touchStartFired = false;\r\n    };\r\n    //});\r\n\r\n    callback && callback(clickId);\r\n\r\n    /* callback().then((bad) => {\r\n      if(bad) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n      \r\n      //console.log('ripple after promise', Date.now() - startTime);\r\n      //console.log('ripple tooSlow:', tooSlow);\r\n      /* if(tooSlow) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n\r\n      window.requestAnimationFrame(() => {\r\n        const rect = r.getBoundingClientRect();\r\n        elem.classList.add('c-ripple__circle');\r\n\r\n        const clickX = clientX - rect.left;\r\n        const clickY = clientY - rect.top;\r\n\r\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\r\n        const size = radius;\r\n\r\n        // center of circle\r\n        const x = clickX - size / 2;\r\n        const y = clickY - size / 2;\r\n\r\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\r\n\r\n        elem.style.width = elem.style.height = size + 'px';\r\n        elem.style.left = x + 'px';\r\n        elem.style.top = y + 'px';\r\n\r\n        // нижний код выполняется с задержкой\r\n        /* animationEndPromise = new Promise((resolve) => {\r\n          span.addEventListener('animationend', () => {\r\n            // 713 -> 700\r\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\r\n          }, {once: true});\r\n        }); */\r\n        \r\n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\r\n        /* span.style.display = 'none';\r\n        r.append(span);\r\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\r\n        span.style.display = ''; */\r\n\r\n        r.append(elem);\r\n\r\n        //r.classList.add('active');\r\n        //handler();\r\n      });\r\n    //});\r\n  };\r\n\r\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\r\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \r\n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\r\n    );\r\n\r\n  // TODO: rename this variable\r\n  let touchStartFired = false;\r\n  if(IS_TOUCH_SUPPORTED) {\r\n    let touchEnd = () => {\r\n      handler && handler();\r\n    };\r\n  \r\n    elem.addEventListener('touchstart', (e) => {\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n\r\n      //console.log('ripple touchstart', e);\r\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('touchstart', e);\r\n      touchStartFired = true;\r\n  \r\n      let {clientX, clientY} = e.touches[0];\r\n      drawRipple(clientX, clientY);\r\n      elem.addEventListener('touchend', touchEnd, {once: true});\r\n  \r\n      window.addEventListener('touchmove', (e) => {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        touchEnd();\r\n        elem.removeEventListener('touchend', touchEnd);\r\n      }, {once: true});\r\n    }, {passive: true});\r\n  } else {\r\n    elem.addEventListener('mousedown', (e) => {\r\n      if(![0, 2].includes(e.button)) { // only left and right buttons\r\n        return;\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\r\n\r\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\r\n        return;\r\n      } else if(touchStartFired) {\r\n        touchStartFired = false;\r\n        return;\r\n      }\r\n  \r\n      let {clientX, clientY} = e;\r\n      drawRipple(clientX, clientY);\r\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\r\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from '../components/misc';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AccountPassword } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport passwordManager from '../lib/mtproto/passwordManager';\r\nimport Page from './page';\r\nimport Button from '../components/button';\r\nimport PasswordInputField from '../components/passwordInputField';\r\nimport PasswordMonkey from '../components/monkeys/password';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport I18n from '../lib/langPack';\r\nimport LoginPage from './loginPage';\r\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\r\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\nimport toggleDisability from '../helpers/dom/toggleDisability';\r\n\r\nconst TEST = false;\r\nlet passwordInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const page = new LoginPage({\r\n    className: 'page-password',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'Login.Password.Title',\r\n    subtitleLangKey: 'Login.Password.Subtitle'\r\n  });\r\n\r\n  const btnNext = Button('btn-primary btn-color-primary');\r\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\r\n\r\n  btnNext.append(btnNextI18n.element);\r\n\r\n  const passwordInputField = new PasswordInputField({\r\n    label: 'LoginPassword',\r\n    name: 'password'\r\n  });\r\n\r\n  passwordInput = passwordInputField.input as HTMLInputElement;\r\n\r\n  page.inputWrapper.append(passwordInputField.container, btnNext);\r\n\r\n  let getStateInterval: number;\r\n\r\n  let getState = () => {\r\n    // * just to check session relevance\r\n    if(!getStateInterval) {\r\n      getStateInterval = window.setInterval(getState, 10e3);\r\n    }\r\n\r\n    return !TEST && passwordManager.getState().then(_state => {\r\n      state = _state;\r\n\r\n      if(state.hint) {\r\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\r\n      } else {\r\n        passwordInputField.setLabel();\r\n      }\r\n    });\r\n  };\r\n\r\n  let state: AccountPassword;\r\n  \r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!passwordInput.value.length) {\r\n      passwordInput.classList.add('error');\r\n      return;\r\n    }\r\n\r\n    const toggle = toggleDisability([passwordInput, btnNext], true);\r\n    let value = passwordInput.value;\r\n\r\n    btnNextI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(btnNext);\r\n\r\n    passwordManager.check(value, state).then((response) => {\r\n      //console.log('passwordManager response:', response);\r\n        \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          clearInterval(getStateInterval);\r\n          import('./pageIm').then(m => {\r\n            m.default.mount();\r\n          });\r\n          if(monkey) monkey.remove();\r\n          break;\r\n        default:\r\n          btnNext.removeAttribute('disabled');\r\n          btnNextI18n.update({key: response._ as any});\r\n          preloader.remove();\r\n          break;\r\n      }\r\n    }).catch((err: any) => {\r\n      toggle();\r\n      passwordInputField.input.classList.add('error');\r\n      \r\n      switch(err.type) {\r\n        default:\r\n          //btnNext.innerText = err.type;\r\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\r\n          passwordInput.select();\r\n          break;\r\n      }\r\n\r\n      preloader.remove();\r\n  \r\n      getState();\r\n    });\r\n  };\r\n  \r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  passwordInput.addEventListener('keypress', function(this, e) {\r\n    this.classList.remove('error');\r\n    btnNextI18n.update({key: 'Login.Next'});\r\n\r\n    if(e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new PasswordMonkey(passwordInputField, size);\r\n  page.imageDiv.append(monkey.container);\r\n  return Promise.all([\r\n    monkey.load(),\r\n    getState()\r\n  ]);\r\n};\r\n\r\nconst page = new Page('page-password', true, onFirstMount, null, () => {\r\n  //if(!isAppleMobile) {\r\n    passwordInput.focus();\r\n  //}\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ListenerSetter from \"../listenerSetter\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\nimport simulateEvent from \"./dispatchEvent\";\r\n\r\nexport const CLICK_EVENT_NAME: 'mousedown' /* | 'touchend' */ | 'click' = (IS_TOUCH_SUPPORTED ? 'mousedown' : 'click') as any;\r\nexport type AttachClickOptions = AddEventListenerOptions & Partial<{listenerSetter: ListenerSetter, touchMouseDown: true}>;\r\nexport function attachClickEvent(elem: HTMLElement | Window, callback: (e: /* TouchEvent |  */MouseEvent) => void, options: AttachClickOptions = {}) {\r\n  const add = options.listenerSetter ? options.listenerSetter.add(elem) : elem.addEventListener.bind(elem);\r\n  // const remove = options.listenerSetter ? options.listenerSetter.removeManual.bind(options.listenerSetter, elem) : elem.removeEventListener.bind(elem);\r\n\r\n  options.touchMouseDown = true;\r\n  /* if(options.touchMouseDown && CLICK_EVENT_NAME === 'touchend') {\r\n    add('mousedown', callback, options);\r\n  } else if(CLICK_EVENT_NAME === 'touchend') {\r\n    const o = {...options, once: true};\r\n\r\n    const onTouchStart = (e: TouchEvent) => {\r\n      const onTouchMove = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        remove('touchend', onTouchEnd, o);\r\n      };\r\n  \r\n      const onTouchEnd = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        callback(e);\r\n        if(options.once) {\r\n          remove('touchstart', onTouchStart);\r\n        }\r\n      };\r\n  \r\n      add('touchend', onTouchEnd, o);\r\n      add('touchmove', onTouchMove, o);\r\n    };\r\n\r\n    add('touchstart', onTouchStart);\r\n  } else {\r\n    add(CLICK_EVENT_NAME, callback, options);\r\n  } */\r\n  add(CLICK_EVENT_NAME, callback, options);\r\n}\r\n\r\nexport function detachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options?: AddEventListenerOptions) {\r\n  // if(CLICK_EVENT_NAME === 'touchend') {\r\n  //   elem.removeEventListener('touchstart', callback, options);\r\n  // } else {\r\n    elem.removeEventListener(CLICK_EVENT_NAME, callback, options);\r\n  // }\r\n}\r\n\r\nexport function simulateClickEvent(elem: HTMLElement) {\r\n  simulateEvent(elem, CLICK_EVENT_NAME);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { ripple } from \"./ripple\";\r\n\r\nconst Button = (className: string, options: Partial<{\r\n  noRipple: true, \r\n  onlyMobile: true, \r\n  icon: string, \r\n  rippleSquare: true, \r\n  text: LangPackKey, \r\n  disabled: boolean,\r\n  asDiv: boolean\r\n}> = {}) => {\r\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\r\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\r\n\r\n  if(!options.noRipple) {\r\n    if(options.rippleSquare) {\r\n      button.classList.add('rp-square');\r\n    }\r\n\r\n    ripple(button);\r\n  }\r\n\r\n  if(options.onlyMobile) {\r\n    button.classList.add('only-handhelds');\r\n  }\r\n\r\n  if(options.disabled) {\r\n    button.setAttribute('disabled', 'true');\r\n  }\r\n\r\n  if(options.text) {\r\n    button.append(i18n(options.text));\r\n  }\r\n\r\n  return button;\r\n};\r\n\r\nexport default Button;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport { IS_APPLE, IS_MOBILE_SAFARI } from \"../environment/userAgent\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport appNavigationController from \"./appNavigationController\";\r\n\r\nexport function putPreloader(elem: Element, returnDiv = false): HTMLElement {\r\n  const html = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"25 25 50 50\">\r\n  <circle class=\"preloader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\r\n  </svg>`;\r\n\r\n  if(returnDiv) {\r\n    const div = document.createElement('div');\r\n    div.classList.add('preloader');\r\n    div.innerHTML = html;\r\n\r\n    if(elem) {\r\n      elem.appendChild(div);\r\n    }\r\n\r\n    return div;\r\n  }\r\n  \r\n  elem.insertAdjacentHTML('beforeend', html);\r\n  return elem.lastElementChild as HTMLElement;\r\n}\r\n\r\nMOUNT_CLASS_TO.putPreloader = putPreloader;\r\n\r\nexport function setButtonLoader(elem: HTMLButtonElement, icon = 'check') {\r\n  elem.classList.remove('tgico-' + icon);\r\n  elem.disabled = true;\r\n  putPreloader(elem);\r\n\r\n  return () => {\r\n    elem.innerHTML = '';\r\n    elem.classList.add('tgico-' + icon);\r\n    elem.removeAttribute('disabled');\r\n  };\r\n}\r\n\r\n/* export function parseMenuButtonsTo(to: {[name: string]: HTMLElement}, elements: HTMLCollection | NodeListOf<HTMLElement>) {\r\n  Array.from(elements).forEach(el => {\r\n    const match = el.className.match(/(?:^|\\s)menu-(.+?)(?:$|\\s)/);\r\n    if(!match) return;\r\n    to[match[1]] = el as HTMLElement;\r\n  });\r\n} */\r\n\r\nlet onMouseMove = (e: MouseEvent) => {\r\n  let rect = openedMenu.getBoundingClientRect();\r\n  let {clientX, clientY} = e;\r\n  \r\n  let diffX = clientX >= rect.right ? clientX - rect.right : rect.left - clientX;\r\n  let diffY = clientY >= rect.bottom ? clientY - rect.bottom : rect.top - clientY;\r\n  \r\n  if(diffX >= 100 || diffY >= 100) {\r\n    closeBtnMenu();\r\n    //openedMenu.parentElement.click();\r\n  }\r\n  //console.log('mousemove', diffX, diffY);\r\n};\r\n\r\nconst onClick = (e: MouseEvent | TouchEvent) => {\r\n  //cancelEvent(e);\r\n  closeBtnMenu();\r\n};\r\n\r\n// ! no need in this due to the same handler in appNavigationController\r\n/* const onKeyDown = (e: KeyboardEvent) => {\r\n  if(e.key === 'Escape') {\r\n    closeBtnMenu();\r\n    cancelEvent(e);\r\n  }\r\n}; */\r\n\r\nexport const closeBtnMenu = () => {\r\n  if(openedMenu) {\r\n    openedMenu.classList.remove('active');\r\n    openedMenu.parentElement.classList.remove('menu-open');\r\n    //openedMenu.previousElementSibling.remove(); // remove overlay\r\n    if(menuOverlay) menuOverlay.remove();\r\n    openedMenu = null;\r\n\r\n    rootScope.dispatchEvent('context_menu_toggle', false);\r\n  }\r\n  \r\n  if(openedMenuOnClose) {\r\n    openedMenuOnClose();\r\n    openedMenuOnClose = null;\r\n  }\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    //window.removeEventListener('keydown', onKeyDown, {capture: true});\r\n    window.removeEventListener('contextmenu', onClick);\r\n  }\r\n\r\n  document.removeEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  if(!IS_MOBILE_SAFARI) {\r\n    appNavigationController.removeByType('menu');\r\n  }\r\n};\r\n\r\nwindow.addEventListener('resize', () => {\r\n  if(openedMenu) {\r\n    closeBtnMenu();\r\n  }\r\n  \r\n  /* if(openedMenu && (openedMenu.style.top || openedMenu.style.left)) {\r\n    const rect = openedMenu.getBoundingClientRect();\r\n    const {innerWidth, innerHeight} = window;\r\n\r\n    console.log(innerWidth, innerHeight, rect);\r\n  } */\r\n});\r\n\r\nlet openedMenu: HTMLElement = null, openedMenuOnClose: () => void = null, menuOverlay: HTMLElement = null;\r\nexport function openBtnMenu(menuElement: HTMLElement, onClose?: () => void) {\r\n  closeBtnMenu();\r\n\r\n  if(!IS_MOBILE_SAFARI) {\r\n    appNavigationController.pushItem({\r\n      type: 'menu',\r\n      onPop: (canAnimate) => {\r\n        closeBtnMenu();\r\n      }\r\n    });\r\n  }\r\n  \r\n  openedMenu = menuElement;\r\n  openedMenu.classList.add('active');\r\n  openedMenu.parentElement.classList.add('menu-open');\r\n\r\n  if(!menuOverlay) {\r\n    menuOverlay = document.createElement('div');\r\n    menuOverlay.classList.add('btn-menu-overlay');\r\n\r\n    // ! because this event must be canceled, and can't cancel on menu click (below)\r\n    menuOverlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n      cancelEvent(e);\r\n      onClick(e);\r\n    });\r\n  }\r\n\r\n  openedMenu.parentElement.insertBefore(menuOverlay, openedMenu);\r\n\r\n  //document.body.classList.add('disable-hover');\r\n  \r\n  openedMenuOnClose = onClose;\r\n\r\n  if(!IS_TOUCH_SUPPORTED) {\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    //window.addEventListener('keydown', onKeyDown, {capture: true});\r\n    window.addEventListener('contextmenu', onClick, {once: true});\r\n  }\r\n\r\n  /* // ! because this event must be canceled, and can't cancel on menu click (below)\r\n  overlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n    cancelEvent(e);\r\n    onClick(e);\r\n  }); */\r\n  \r\n  // ! safari iOS doesn't handle window click event on overlay, idk why\r\n  document.addEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  rootScope.dispatchEvent('context_menu_toggle', true);\r\n}\r\n\r\nconst PADDING_TOP = 8;\r\nconst PADDING_LEFT = 8;\r\nexport function positionMenu({pageX, pageY}: MouseEvent | Touch, elem: HTMLElement, side?: 'left' | 'right' | 'center') {\r\n  //let {clientX, clientY} = e;\r\n\r\n  // * side mean the OPEN side\r\n\r\n  let {scrollWidth: menuWidth, scrollHeight: menuHeight} = elem;\r\n  //let {innerWidth: windowWidth, innerHeight: windowHeight} = window;\r\n  const rect = document.body.getBoundingClientRect();\r\n  const windowWidth = rect.width;\r\n  const windowHeight = rect.height;\r\n\r\n  side = mediaSizes.isMobile ? 'right' : 'left';\r\n  let verticalSide: 'top' /* | 'bottom' */ | 'center' = 'top';\r\n\r\n  const getSides = () => {\r\n    return {\r\n      x: {\r\n        left: pageX,\r\n        right: pageX - menuWidth\r\n      },\r\n      intermediateX: side === 'right' ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      //intermediateX: clientX < windowWidth / 2 ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      y: {\r\n        top: pageY,\r\n        bottom: pageY - menuHeight\r\n      },\r\n      //intermediateY: verticalSide === 'top' ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n      intermediateY: pageY < windowHeight / 2 ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n    };\r\n  };\r\n\r\n  const sides = getSides();\r\n\r\n  const possibleSides = {\r\n    x: {\r\n      left: sides.x.left + menuWidth + PADDING_LEFT <= windowWidth,\r\n      right: sides.x.right >= PADDING_LEFT\r\n    },\r\n    y: {\r\n      top: sides.y.top + menuHeight + PADDING_TOP <= windowHeight,\r\n      bottom: sides.y.bottom - PADDING_TOP >= PADDING_TOP\r\n    }\r\n  };\r\n\r\n  /* if(side === undefined) {\r\n    if((clientX + menuWidth + PADDING_LEFT) > windowWidth) {\r\n      side = 'right';\r\n    }\r\n  } */\r\n\r\n  {\r\n    /* const x = sides.x;\r\n\r\n    const s = Object.keys(x) as (keyof typeof possibleSides.x)[];\r\n    if(side) {\r\n      s.findAndSplice(s => s === side);\r\n      s.unshift(side);\r\n    }\r\n\r\n    const possibleSide = s.find(s => possibleSides.x[s]); */\r\n    let left: number;\r\n    /* if(possibleSide) {\r\n      left = x[possibleSide];\r\n      side = possibleSide;\r\n    } else {\r\n      left = sides.intermediateX;\r\n      side = undefined;\r\n    } */\r\n    left = possibleSides.x[side] ? sides.x[side] : (side = 'center', sides.intermediateX);\r\n  \r\n    elem.style.left = left + 'px';\r\n  }\r\n\r\n  /* if((clientY + menuHeight + PADDING_TOP) > windowHeight) {\r\n    elem.style.top = clamp(clientY - menuHeight, PADDING_TOP, windowHeight - menuHeight - PADDING_TOP) + 'px';\r\n    // elem.style.top = (innerHeight - scrollHeight - PADDING_TOP) + 'px';\r\n    verticalSide = 'bottom';\r\n  } else {\r\n    elem.style.top = Math.max(PADDING_TOP, clientY) + 'px';\r\n    verticalSide = 'top';\r\n  } */\r\n\r\n  {\r\n    let top: number;\r\n\r\n    top = possibleSides.y[verticalSide] ? sides.y[verticalSide] : (verticalSide = 'center', sides.intermediateY);\r\n  \r\n    elem.style.top = top + 'px';\r\n  }\r\n  \r\n  elem.className = elem.className.replace(/(top|center|bottom)-(left|center|right)/g, '');\r\n  elem.classList.add(\r\n    //(verticalSide === 'center' ? verticalSide : (verticalSide === 'bottom' ? 'top' : 'bottom')) +\r\n    (verticalSide === 'center' ? verticalSide : 'bottom') +\r\n    '-' +\r\n    (side === 'center' ? side : (side === 'left' ? 'right' : 'left')));\r\n}\r\n\r\nlet _cancelContextMenuOpening = false, _cancelContextMenuOpeningTimeout = 0;\r\nexport function cancelContextMenuOpening() {\r\n  if(_cancelContextMenuOpeningTimeout) {\r\n    clearTimeout(_cancelContextMenuOpeningTimeout);\r\n  }\r\n    \r\n  _cancelContextMenuOpeningTimeout = window.setTimeout(() => {\r\n    _cancelContextMenuOpeningTimeout = 0;\r\n    _cancelContextMenuOpening = false;\r\n  }, .4e3);\r\n\r\n  _cancelContextMenuOpening = true;\r\n}\r\n\r\nexport function attachContextMenuListener(element: HTMLElement, callback: (e: Touch | MouseEvent) => void, listenerSetter?: ListenerSetter) {\r\n  const add = listenerSetter ? listenerSetter.add(element) : element.addEventListener.bind(element);\r\n  const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, element) : element.removeEventListener.bind(element);\r\n\r\n  if(IS_APPLE && IS_TOUCH_SUPPORTED) {\r\n    let timeout: number;\r\n\r\n    const options: EventListenerOptions = {capture: true};\r\n\r\n    const onCancel = () => {\r\n      clearTimeout(timeout);\r\n      // @ts-ignore\r\n      remove('touchmove', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchend', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchcancel', onCancel, options);\r\n    };\r\n\r\n    add('touchstart', (e: TouchEvent) => {\r\n      if(e.touches.length > 1) {\r\n        onCancel();\r\n        return;\r\n      }\r\n  \r\n      add('touchmove', onCancel, options);\r\n      add('touchend', onCancel, options);\r\n      add('touchcancel', onCancel, options);\r\n\r\n      timeout = window.setTimeout(() => {\r\n        if(_cancelContextMenuOpening) {\r\n          onCancel();\r\n          return;\r\n        }\r\n\r\n        callback(e.touches[0]);\r\n        onCancel();\r\n\r\n        if(openedMenu) {\r\n          element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n        }\r\n      }, .4e3);\r\n    });\r\n\r\n    /* if(!isSafari) {\r\n      add('contextmenu', (e: any) => {\r\n        cancelEvent(e);\r\n      }, {passive: false, capture: true});\r\n    } */\r\n  } else {\r\n    add('contextmenu', IS_TOUCH_SUPPORTED ? (e: any) => {\r\n      callback(e);\r\n\r\n      if(openedMenu) {\r\n        element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n      }\r\n    } : callback);\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport selectElementContents from \"../helpers/dom/selectElementContents\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport SetTransition from \"./singleTransition\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true,\r\n  required?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  // protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength !== undefined && options.showLengthOn === undefined) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        // this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if(!this.value) { // * avoid selecting whole empty field on iOS devices\r\n      return;\r\n    }\r\n\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    } else {\r\n      selectElementContents(this.input);\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput(setHeight = true) {\r\n    const {scrollHeight: newHeight/* , clientHeight */} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    const currentHeight = +this.input.style.height.replace('px', '');\r\n    if(currentHeight === newHeight) {\r\n      return;\r\n    }\r\n\r\n    const TRANSITION_DURATION_FACTOR = 50;\r\n    const transitionDuration = Math.round(\r\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\r\n    );\r\n\r\n    // this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.transitionDuration = `${transitionDuration}ms`;\r\n\r\n    if(setHeight) {\r\n      this.input.style.height = newHeight ? newHeight + 'px' : '';\r\n    }\r\n\r\n    const className = 'is-changing-height';\r\n    SetTransition(this.input, className, true, transitionDuration, () => {\r\n      this.input.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public isValidToChange() {\r\n    return this.isValid() && this.isChanged();\r\n  }\r\n\r\n  public setDraftValue(value = '', silent = false) {\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n    this.setDraftValue(value, silent);\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// https://stackoverflow.com/a/6150060\nexport default function selectElementContents(el: HTMLElement) {\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const sel = window.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { IS_MOBILE_SAFARI } from \"../environment/userAgent\";\r\nimport { logger } from \"../lib/logger\";\r\nimport { doubleRaf } from \"../helpers/schedulers\";\r\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { indexOfAndSplice } from \"../helpers/array\";\r\nimport isSwipingBackSafari from \"../helpers/dom/isSwipingBackSafari\";\r\n\r\nexport type NavigationItem = {\r\n  type: 'left' | 'right' | 'im' | 'chat' | 'popup' | 'media' | 'menu' | \r\n    'esg' | 'multiselect' | 'input-helper' | 'autocomplete-helper' | 'markup' | 'global-search' | 'voice',\r\n  onPop: (canAnimate: boolean) => boolean | void,\r\n  onEscape?: () => boolean,\r\n  noHistory?: boolean,\r\n  noBlurOnPop?: boolean,\r\n};\r\n\r\nexport class AppNavigationController {\r\n  private navigations: Array<NavigationItem> = [];\r\n  private id = Date.now();\r\n  private manual = false;\r\n  private log = logger('NC');\r\n  private debug = true;\r\n  private currentHash = window.location.hash;\r\n  public onHashChange: () => void;\r\n\r\n  constructor() {\r\n    let isPossibleSwipe = false;\r\n    window.addEventListener('popstate', (e) => {\r\n      this.debug && this.log('popstate', e, isPossibleSwipe);\r\n\r\n      if(window.location.hash !== this.currentHash) {\r\n        this.onHashChange && this.onHashChange();\r\n        this.replaceState();\r\n        return;\r\n      }\r\n      this.currentHash = window.location.hash;\r\n\r\n      const id: number = e.state;\r\n      if(id !== this.id/*  && !this.navigations.length */) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      const item = this.navigations.pop();\r\n      if(!item) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      this.manual = !isPossibleSwipe;\r\n      this.handleItem(item);\r\n      //this.pushState(); // * prevent adding forward arrow\r\n    });\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      const item = this.navigations[this.navigations.length - 1];\r\n      if(!item) return;\r\n      if(e.key === 'Escape' && (item.onEscape ? item.onEscape() : true)) {\r\n        cancelEvent(e);\r\n        this.back(item.type);\r\n      }\r\n    }, {capture: true, passive: false});\r\n\r\n    if(IS_MOBILE_SAFARI) {\r\n      const options = {passive: true};\r\n      window.addEventListener('touchstart', (e) => {\r\n        if(e.touches.length > 1) return;\r\n        this.debug && this.log('touchstart');\r\n\r\n        if(isSwipingBackSafari(e)) {\r\n          isPossibleSwipe = true;\r\n\r\n          window.addEventListener('touchend', () => {\r\n            setTimeout(() => {\r\n              isPossibleSwipe = false;\r\n            }, 100);\r\n          }, {passive: true, once: true});\r\n        }\r\n\r\n        /* const detach = () => {\r\n          window.removeEventListener('touchend', onTouchEnd);\r\n          window.removeEventListener('touchmove', onTouchMove);\r\n        };\r\n\r\n        let moved = false;\r\n        const onTouchMove = (e: TouchEvent) => {\r\n          this.debug && this.log('touchmove');\r\n          if(e.touches.length > 1) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          moved = true;\r\n        };\r\n\r\n        const onTouchEnd = (e: TouchEvent) => {\r\n          this.debug && this.log('touchend');\r\n          if(e.touches.length > 1 || !moved) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          isPossibleSwipe = true;\r\n          doubleRaf().then(() => {\r\n            isPossibleSwipe = false;\r\n          });\r\n\r\n          detach();\r\n        };\r\n\r\n        window.addEventListener('touchend', onTouchEnd, options);\r\n        window.addEventListener('touchmove', onTouchMove, options); */\r\n      }, options);\r\n    }\r\n\r\n    history.scrollRestoration = 'manual';\r\n\r\n    this.pushState(); // * push init state\r\n  }\r\n\r\n  private handleItem(item: NavigationItem) {\r\n    const good = item.onPop(!this.manual ? false : undefined);\r\n    this.debug && this.log('popstate, navigation:', item, this.navigations);\r\n    if(good === false) {\r\n      this.pushItem(item);\r\n    } else if(!item.noBlurOnPop) {\r\n      blurActiveElement(); // no better place for it\r\n    }\r\n\r\n    this.manual = false;\r\n  }\r\n\r\n  public findItemByType(type: NavigationItem['type']) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        return {item, index: i};\r\n      }\r\n    }\r\n  }\r\n\r\n  public back(type?: NavigationItem['type']) {\r\n    if(type) {\r\n      const ret = this.findItemByType(type);\r\n      if(ret) {\r\n        this.manual = true;\r\n        // ! commented because 'popstate' event will be fired with delay\r\n        //if(ret.index !== (this.navigations.length - 1)) {\r\n          this.navigations.splice(ret.index, 1);\r\n          this.handleItem(ret.item);\r\n          return;\r\n        //}\r\n      }\r\n    }\r\n\r\n    history.back();\r\n  }\r\n\r\n  public pushItem(item: NavigationItem) {\r\n    this.navigations.push(item);\r\n    this.debug && this.log('pushstate', item, this.navigations);\r\n\r\n    if(!item.noHistory) {\r\n      this.pushState();\r\n    }\r\n  }\r\n\r\n  private pushState() {\r\n    this.manual = false;\r\n    history.pushState(this.id, '');\r\n  }\r\n\r\n  public replaceState() {\r\n    history.replaceState(this.id, '', location.origin + location.pathname);\r\n  }\r\n\r\n  public removeItem(item: NavigationItem) {\r\n    indexOfAndSplice(this.navigations, item);\r\n  }\r\n\r\n  public removeByType(type: NavigationItem['type'], single = false) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        this.navigations.splice(i, 1);\r\n\r\n        if(single) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst appNavigationController = new AppNavigationController();\r\nMOUNT_CLASS_TO.appNavigationController = appNavigationController;\r\nexport default appNavigationController;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nconst SetTransition = (\r\n  element: HTMLElement, \r\n  className: string, \r\n  forwards: boolean, \r\n  duration: number, \r\n  onTransitionEnd?: () => void, \r\n  useRafs?: number\r\n) => {\r\n  const {timeout, raf} = element.dataset;\r\n  if(timeout !== undefined) {\r\n    clearTimeout(+timeout);\r\n  }\r\n\r\n  if(raf !== undefined) {\r\n    window.cancelAnimationFrame(+raf);\r\n    if(!useRafs) {\r\n      delete element.dataset.raf;\r\n    }\r\n  }\r\n\r\n  // if(forwards && className && element.classList.contains(className) && !element.classList.contains('animating')) {\r\n  //   return;\r\n  // }\r\n\r\n  if(useRafs && rootScope.settings.animationsEnabled && duration) {\r\n    element.dataset.raf = '' + window.requestAnimationFrame(() => {\r\n      delete element.dataset.raf;\r\n      SetTransition(element, className, forwards, duration, onTransitionEnd, useRafs - 1);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if(forwards && className) {\r\n    element.classList.add(className);\r\n  }\r\n\r\n  const afterTimeout = () => {\r\n    delete element.dataset.timeout;\r\n    if(!forwards && className) {\r\n      element.classList.remove('backwards', className);\r\n    }\r\n\r\n    element.classList.remove('animating');\r\n    \r\n    onTransitionEnd && onTransitionEnd();\r\n  };\r\n\r\n  if(!rootScope.settings.animationsEnabled || !duration) {\r\n    element.classList.remove('animating', 'backwards');\r\n    afterTimeout();\r\n    return;\r\n  }\r\n\r\n  element.classList.add('animating');\r\n\r\n  element.classList.toggle('backwards', !forwards);\r\n  element.dataset.timeout = '' + setTimeout(afterTimeout, duration);\r\n};\r\n\r\nexport default SetTransition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","export default function simulateEvent(elem: HTMLElement, name: string) {\n  const event = new Event(name, {bubbles: true, cancelable: true});\n  elem.dispatchEvent(event);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { fastRaf } from \"./schedulers\";\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"./dom/isInDOM\";\r\n\r\nclass SequentialDom {\r\n  private promises: Partial<{\r\n    read: CancellablePromise<void>,\r\n    write: CancellablePromise<void>\r\n  }> = {};\r\n  private raf = fastRaf.bind(null);\r\n  private scheduled = false;\r\n\r\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\r\n    let promise = this.promises[kind];\r\n    if(!promise) {\r\n      this.scheduleFlush();\r\n      promise = this.promises[kind] = deferredPromise<void>();\r\n    }\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n    \r\n    return promise;\r\n  }\r\n\r\n  public measure(callback?: VoidFunction) {\r\n    return this.do('read', callback);\r\n  }\r\n\r\n  public mutate(callback?: VoidFunction) {\r\n    return this.do('write', callback);\r\n  }\r\n\r\n  /**\r\n   * Will fire instantly if element is not connected\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\r\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private scheduleFlush() {\r\n    if(!this.scheduled) {\r\n      this.scheduled = true;\r\n\r\n      this.raf(() => {\r\n        this.promises.read && this.promises.read.resolve();\r\n        this.promises.write && this.promises.write.resolve();\r\n\r\n        this.scheduled = false;\r\n        this.promises = {};\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst sequentialDom = new SequentialDom();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\r\nexport default sequentialDom;\r\n"],"sourceRoot":""}