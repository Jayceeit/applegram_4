{"version":3,"sources":["webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/helpers/dom/placeCaretAtEnd.ts","webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/components/telInputField.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/helpers/dom/selectElementContents.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/components/singleTransition.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/helpers/dom/getRichValue.ts"],"names":["findUpAttribute","el","attribute","closest","markdownTags","bold","match","entityName","underline","italic","monospace","strikethrough","link","mentionName","getRichElementValue","node","lines","line","selNode","selOffset","entities","offset","nodeType","nodeValue","push","substr","trim","parentNode","parentElement","type","tag","getAttribute","_","url","href","length","user_id","dataset","follow","toUserId","isSelected","isBlock","tagName","join","splice","HTMLImageElement","alt","curChild","firstChild","nextSibling","isInputEmpty","element","hasAttribute","value","placeCaretAtEnd","ignoreTouchCheck","document","activeElement","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","blobSupported","e","this","fileWriter","bytes","Blob","then","arr","write","mimeType","saveFileCallback","blobParts","part","truncate","finalize","saveToStorage","blob","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","open","entryName","timeoutOperation","cache","delete","response","put","fileName","method","get","Response","headers","size","save","callback","Promise","resolve","reject","rejected","timeout","setTimeout","undefined","res","err","clearTimeout","fakeWriter","getFakeFileWriter","saveFile","catch","enabled","all","map","storage","deleteAll","TelInputField","options","super","label","name","pasted","lastValue","container","classList","add","telEl","input","HTMLInputElement","autocomplete","inputMode","pixelRatio","devicePixelRatio","letterSpacing","style","setProperty","originalFunc","setValueSilently","bind","addEventListener","remove","formattedPhoneNumber","Math","abs","setLabel","formatted","country","countryCode","leftPattern","replace","code","onInput","key","metaKey","ctrlKey","shiftKey","preventDefault","replaceContent","elem","innerHTML","lastChild","replaceWith","textContent","append","init","target","text","originalEvent","clipboardData","getData","parseEntities","filter","wrapRichText","noLinks","wrappingDraft","execCommand","InputState","createElement","required","validate","maxLength","showLengthOn","min","round","placeholder","plainText","processInput","labelText","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","setAttribute","className","border","labelEl","lastElementChild","showingLength","wasError","contains","inputLength","getRichValue","diff","isError","toggle","selectElementContents","labelOptions","setHeight","scrollHeight","newHeight","currentHeight","height","transitionDuration","log","fireFakeInput","originalValue","isValid","isChanged","silent","wrapDraftText","setDraftValue","state","Error","Valid","setState","ScrollableBase","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","Array","from","children","forEach","c","onScroll","passive","capture","cancelAnimationFrame","position","margin","maxDistance","forceDirection","forceDuration","axis","getNormalSize","Scrollable","onScrollOffset","withPaddingContainer","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","splitUp","requestAnimationFrame","scrollTop","checkForTriggers","maxScrollTop","clientHeight","setListeners","elements","padding","prepend","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","restriction","disabled","toggleDisability","span","id","checked","stateKey","getState","stateValue","stateValues","indexOf","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withRipple","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","SetTransition","forwards","duration","onTransitionEnd","useRafs","raf","settings","animationsEnabled","afterTimeout","removeAttribute","findUpTag","field","withEntities","combineSameEntities"],"mappings":"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","file":"1.3b62d6a238c45c13e6e4.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"font-weight\"], b',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    const nodeValue = node.nodeValue;\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.trim()) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest && closest.getAttribute('contenteditable') === null) {\r\n            if(tag.entityName === 'messageEntityTextUrl') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                url: (parentElement as HTMLAnchorElement).href,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            } else if(tag.entityName === 'messageEntityMentionName') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                offset: offset.offset,\r\n                length: nodeValue.length,\r\n                user_id: parentElement.dataset.follow.toUserId()\r\n              });\r\n            } else {\r\n              entities.push({\r\n                _: tag.entityName as any,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = (selNode === node);\r\n  const isBlock = node.tagName === 'DIV' || node.tagName === 'P';\r\n  if(isBlock && line.length || node.tagName === 'BR') {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  } else if(node instanceof HTMLImageElement) {\r\n    const alt = node.alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../../environment/touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(IS_TOUCH_SUPPORTED && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { blobConstruct, readBlobAsUint8Array } from \"../helpers/blob\";\r\n\r\nexport class FileManager {\r\n  public blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\r\n    if(bytes instanceof Blob) { // is file bytes\r\n      return readBlobAsUint8Array(bytes).then(arr => {\r\n        return fileWriter.write(arr);\r\n      });\r\n    } else {\r\n      return fileWriter.write(bytes);\r\n    }\r\n  }\r\n\r\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    const blobParts: Array<Uint8Array | string> = [];\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array | string) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        blobParts.push(part);\r\n      },\r\n      truncate: () => {\r\n        blobParts.length = 0;\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(blobParts, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport { blobConstruct } from '../helpers/blob';\r\nimport FileManager from './filemanager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob) as Blob;\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean) {\r\n    return Promise.all(this.STORAGES.map(storage => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\n//const cacheStorage = new CacheStorageController(); \r\n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\r\n//export default cacheStorage;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\nimport { IS_APPLE, IS_ANDROID, IS_APPLE_MOBILE } from \"../environment/userAgent\";\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class TelInputField extends InputField {\n  private pasted = false;\n  public lastValue = '';\n  \n  constructor(options: InputFieldOptions & {\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\n  } = {}) {\n    super({\n      label: 'Contacts.PhoneNumber.Placeholder',\n      //plainText: true,\n      name: 'phone',\n      ...options\n    });\n\n    this.container.classList.add('input-field-phone');\n\n    let telEl = this.input;\n    if(telEl instanceof HTMLInputElement) {\n      telEl.type = 'tel';\n      telEl.autocomplete = 'rr55RandomRR55';\n    } else {\n      telEl.inputMode = 'decimal';\n\n      const pixelRatio = window.devicePixelRatio;\n      if(pixelRatio > 1) {\n        let letterSpacing: number;\n        if(IS_APPLE) {\n          letterSpacing = pixelRatio * -.16;\n        } else if(IS_ANDROID) {\n          letterSpacing = 0;\n        }\n\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\n      }\n\n      const originalFunc = this.setValueSilently.bind(this);\n      this.setValueSilently = (value) => {\n        originalFunc(value);\n        placeCaretAtEnd(this.input, true);\n      };\n    }\n\n    telEl.addEventListener('input', () => {\n      //console.log('input', this.value);\n      telEl.classList.remove('error');\n  \n      const value = this.value;\n      const diff = Math.abs(value.length - this.lastValue.length);\n      if(diff > 1 && !this.pasted && IS_APPLE_MOBILE) {\n        this.setValueSilently(this.lastValue + value);\n      }\n  \n      this.pasted = false;\n  \n      this.setLabel();\n  \n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\n      if(this.value.replace(/\\++/, '+') === '+') {\n        this.setValueSilently('+');\n      } else {\n        formattedPhoneNumber = formatPhoneNumber(this.value);\n        formatted = formattedPhoneNumber.formatted;\n        country = formattedPhoneNumber.country;\n        leftPattern = formattedPhoneNumber.leftPattern;\n        countryCode = formattedPhoneNumber.code;\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\n      }\n  \n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\n  \n      //console.log(formatted, country);\n\n      options.onInput && options.onInput(formattedPhoneNumber);\n    });\n  \n    telEl.addEventListener('paste', () => {\n      this.pasted = true;\n      //console.log('paste', telEl.value);\n    });\n  \n    /* telEl.addEventListener('change', (e) => {\n      console.log('change', telEl.value);\n    }); */\n  \n    telEl.addEventListener('keypress', (e) => {\n      //console.log('keypress', this.value);\n      const key = e.key;\n      if(/\\D/.test(key) && !(e.metaKey || e.ctrlKey) && key !== 'Backspace' && !(key === '+' && e.shiftKey/*  && !this.value */)) {\n        e.preventDefault();\n        return false;\n      }\n    });\n  \n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\n      this.removeAttribute('readonly'); // fix autocomplete\n    });*/\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport selectElementContents from \"../helpers/dom/selectElementContents\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\nimport SetTransition from \"./singleTransition\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true,\r\n  required?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  // protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength !== undefined && options.showLengthOn === undefined) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        // this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if(!this.value) { // * avoid selecting whole empty field on iOS devices\r\n      return;\r\n    }\r\n\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    } else {\r\n      selectElementContents(this.input);\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput(setHeight = true) {\r\n    const {scrollHeight: newHeight/* , clientHeight */} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    const currentHeight = +this.input.style.height.replace('px', '');\r\n    if(currentHeight === newHeight) {\r\n      return;\r\n    }\r\n\r\n    const TRANSITION_DURATION_FACTOR = 50;\r\n    const transitionDuration = Math.round(\r\n      TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\r\n    );\r\n\r\n    // this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.transitionDuration = `${transitionDuration}ms`;\r\n\r\n    if(setHeight) {\r\n      this.input.style.height = newHeight ? newHeight + 'px' : '';\r\n    }\r\n\r\n    const className = 'is-changing-height';\r\n    SetTransition(this.input, className, true, transitionDuration, () => {\r\n      this.input.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public isValidToChange() {\r\n    return this.isValid() && this.isChanged();\r\n  }\r\n\r\n  public setDraftValue(value = '', silent = false) {\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n    this.setDraftValue(value, silent);\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// https://stackoverflow.com/a/6150060\nexport default function selectElementContents(el: HTMLElement) {\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  const sel = window.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { IS_TOUCH_SUPPORTED } from \"../environment/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { FocusDirection, ScrollGetNormalSizeCallback } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(\r\n    element: HTMLElement,\r\n    position: ScrollLogicalPosition,\r\n    margin?: number,\r\n    maxDistance?: number,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number,\r\n    axis?: 'x' | 'y',\r\n    getNormalSize?: ScrollGetNormalSizeCallback\r\n  ) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis, getNormalSize);\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void = null;\r\n  public onScrolledTop: () => void = null;\r\n  public onScrolledBottom: () => void = null;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!IS_TOUCH_SUPPORTED) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.classList.add('checkbox-field-input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nconst SetTransition = (\r\n  element: HTMLElement, \r\n  className: string, \r\n  forwards: boolean, \r\n  duration: number, \r\n  onTransitionEnd?: () => void, \r\n  useRafs?: number\r\n) => {\r\n  const {timeout, raf} = element.dataset;\r\n  if(timeout !== undefined) {\r\n    clearTimeout(+timeout);\r\n  }\r\n\r\n  if(raf !== undefined) {\r\n    window.cancelAnimationFrame(+raf);\r\n    if(!useRafs) {\r\n      delete element.dataset.raf;\r\n    }\r\n  }\r\n\r\n  // if(forwards && className && element.classList.contains(className) && !element.classList.contains('animating')) {\r\n  //   return;\r\n  // }\r\n\r\n  if(useRafs && rootScope.settings.animationsEnabled && duration) {\r\n    element.dataset.raf = '' + window.requestAnimationFrame(() => {\r\n      delete element.dataset.raf;\r\n      SetTransition(element, className, forwards, duration, onTransitionEnd, useRafs - 1);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if(forwards && className) {\r\n    element.classList.add(className);\r\n  }\r\n\r\n  const afterTimeout = () => {\r\n    delete element.dataset.timeout;\r\n    if(!forwards && className) {\r\n      element.classList.remove('backwards', className);\r\n    }\r\n\r\n    element.classList.remove('animating');\r\n    \r\n    onTransitionEnd && onTransitionEnd();\r\n  };\r\n\r\n  if(!rootScope.settings.animationsEnabled || !duration) {\r\n    element.classList.remove('animating', 'backwards');\r\n    afterTimeout();\r\n    return;\r\n  }\r\n\r\n  element.classList.add('animating');\r\n\r\n  element.classList.toggle('backwards', !forwards);\r\n  element.dataset.timeout = '' + setTimeout(afterTimeout, duration);\r\n};\r\n\r\nexport default SetTransition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n"],"sourceRoot":""}